{
  "schemaVersion": "2.2",
  "description": "Initialize stacked master node",
  "parameters": {
    "S3BucketRegion": {
      "type": "String"
    },
    "S3BucketName": {
      "type": "String"
    },
    "ClusterId": {
      "type": "String"
    },
    "VeleroVersion": {
      "type": "String"
    },
    "AuthVersion": {
      "type": "String"
    }
  },
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "Initialization",
      "inputs": {
        "runCommand": [
          "sudo su",
          "export PATH=/root/bin:$PATH",
          "export HOME=/root",
          "mkdir -p /root/bin",

          "cat <<EOF | sudo tee /etc/default/kubelet",
          "KUBELET_EXTRA_ARGS=--cloud-provider=aws",
          "EOF",

          "curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/{{ AuthVersion }}/bin/linux/amd64/aws-iam-authenticator",
          "chmod +x ./aws-iam-authenticator && cp ./aws-iam-authenticator /root/bin/aws-iam-authenticator",
          "mkdir -p /etc/kubernetes/aws-iam-authenticator /var/aws-iam-authenticator",
          "aws s3 cp s3://{{ S3BucketName }}/configs/authenticator.conf /etc/kubernetes/aws-iam-authenticator/kubeconfig.yaml --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/authenticator-cert.pem /var/aws-iam-authenticator/cert.pem --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/authenticator-key.pem /var/aws-iam-authenticator/key.pem --region {{ S3BucketRegion }}",

          "aws s3 cp s3://{{ S3BucketName }}/certificates/ca.crt /etc/kubernetes/pki/ca.crt --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/ca.key /etc/kubernetes/pki/ca.key --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/sa.key /etc/kubernetes/pki/sa.key --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/sa.pub /etc/kubernetes/pki/sa.pub --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/front-proxy-ca.crt /etc/kubernetes/pki/front-proxy-ca.crt --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/front-proxy-ca.key /etc/kubernetes/pki/front-proxy-ca.key --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/etcd/ca.crt /etc/kubernetes/pki/etcd/ca.crt --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/etcd/ca.key /etc/kubernetes/pki/etcd/ca.key --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/configs/kubernetes.conf /etc/kubernetes/admin.conf --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/configs/authenticator.conf /etc/kubernetes/aws-iam-authenticator/kubeconfig.yaml --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/commands/join-command ./join-command --region {{ S3BucketRegion }}",

          "mkdir -p /root/.kube && cp -i /etc/kubernetes/admin.conf /root/.kube/config && chown $(id -u):$(id -g) /root/.kube/config",
          "export KUBECONFIG=/root/.kube/config",
          "$(cat ./join-command) --control-plane && m ./join-command",

          "wget https://github.com/vmware-tanzu/velero/releases/download/v{{ VeleroVersion }}/velero-v{{ VeleroVersion }}-linux-amd64.tar.gz -O velero.tar.gz",
          "mkdir velero && tar -xvf velero.tar.gz -C ./velero && cp velero/velero-v{{ VeleroVersion }}-linux-amd64/velero /root/bin",
          "velero client config set namespace=kube-system",
          "rm velero.tar.gz && rm -rf velero"
        ]
      }
    }
  ]
}
