{
  "schemaVersion": "2.2",
  "description": "Initialize stacked master node",
  "parameters": {
    "S3BucketRegion": {
      "type": "String"
    },
    "S3BucketName": {
      "type": "String"
    },
    "ClusterId": {
      "type": "String"
    }
  },
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "Initialization",
      "inputs": {
        "runCommand": [
          "sudo su",

          "cat <<EOF | sudo tee /etc/default/kubelet",
          "KUBELET_EXTRA_ARGS=--cloud-provider=aws",
          "EOF",

          "curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator",
          "chmod +x ./aws-iam-authenticator",
          "mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$HOME/bin:$PATH",
          "mkdir -p /etc/kubernetes/aws-iam-authenticator",
          "mkdir /var/aws-iam-authenticator",
          "aws s3 cp s3://{{ S3BucketName }}/configs/authenticator.conf /etc/kubernetes/aws-iam-authenticator/kubeconfig.yaml --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/authenticator-cert.pem /var/aws-iam-authenticator/cert.pem --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/authenticator-key.pem /var/aws-iam-authenticator/key.pem --region {{ S3BucketRegion }}",

          "aws s3 cp s3://{{ S3BucketName }}/certificates/ca.crt /etc/kubernetes/pki/ca.crt --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/ca.key /etc/kubernetes/pki/ca.key --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/sa.key /etc/kubernetes/pki/sa.key --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/sa.pub /etc/kubernetes/pki/sa.pub --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/front-proxy-ca.crt /etc/kubernetes/pki/front-proxy-ca.crt --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/front-proxy-ca.key /etc/kubernetes/pki/front-proxy-ca.key --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/etcd/ca.crt /etc/kubernetes/pki/etcd/ca.crt --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/certificates/etcd/ca.key /etc/kubernetes/pki/etcd/ca.key --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/configs/kubernetes.conf /etc/kubernetes/admin.conf --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/configs/authenticator.conf /etc/kubernetes/aws-iam-authenticator/kubeconfig.yaml --region {{ S3BucketRegion }}",
          "aws s3 cp s3://{{ S3BucketName }}/commands/join-command ./join-command --region {{ S3BucketRegion }}",

          "mkdir -p $HOME/.kube",
          "cp -i /etc/kubernetes/admin.conf $HOME/.kube/config",
          "chown $(id -u):$(id -g) $HOME/.kube/config",
          "export KUBECONFIG=$HOME/.kube/config",
          "$(cat ./join-command) --experimental-control-plane",
          "rm ./join-command",

          "wget https://github.com/heptio/velero/releases/download/v1.0.0-rc.1/velero-v1.0.0-rc.1-linux-amd64.tar.gz -O velero.tar.gz",
          "mkdir velero",
          "tar -xvf velero.tar.gz -C ./velero",
          "cp velero/velero-v1.0.0-rc.1-linux-amd64/velero /usr/local/bin",
          "rm velero.tar.gz",
          "rm -rf velero"
        ]
      }
    }
  ]
}