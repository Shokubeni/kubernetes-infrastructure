---

kind: Namespace
apiVersion: v1
metadata:
  name: velero-backups
  annotations:
    linkerd.io/inject: disabled

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    component: velero
  name: velero
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: velero
    namespace: velero-backups

---

apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    component: velero
  name: velero
  namespace: velero-backups

---

apiVersion: v1
data:
  cloud: ${backup_access}
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    component: velero
  name: cloud-credentials
  namespace: velero-backups
type: Opaque

---

apiVersion: velero.io/v1
kind: BackupStorageLocation
metadata:
  creationTimestamp: null
  labels:
    component: velero
  name: default
  namespace: velero-backups
spec:
  config:
    region: ${bucket_region}
  objectStorage:
    bucket: ${bucket_name}
  provider: aws

---

apiVersion: velero.io/v1
kind: VolumeSnapshotLocation
metadata:
  creationTimestamp: null
  labels:
    component: velero
  name: default
  namespace: velero-backups
spec:
  config:
    region: ${bucket_region}
  provider: aws

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    component: velero
  name: velero
  namespace: velero-backups
spec:
  selector:
    matchLabels:
      deploy: velero
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8085"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        component: velero
        deploy: velero
    spec:
      priorityClassName: system-cluster-critical
      containers:
        - args:
            - server
          command:
            - /velero
          env:
            - name: VELERO_SCRATCH_DIR
              value: /scratch
            - name: VELERO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_LIBRARY_PATH
              value: /plugins
          image: velero/velero:v1.3.2
          imagePullPolicy: IfNotPresent
          name: velero
          ports:
            - containerPort: 8085
              name: metrics
          resources:
            limits:
              cpu: "1"
              memory: 256Mi
            requests:
              cpu: 500m
              memory: 128Mi
          volumeMounts:
            - mountPath: /plugins
              name: plugins
            - mountPath: /scratch
              name: scratch
            - mountPath: /credentials
              name: cloud-credentials
      initContainers:
        - image: velero/velero-plugin-for-aws:v1.0.1
          imagePullPolicy: IfNotPresent
          name: velero-plugin-for-aws
          resources: {}
          volumeMounts:
            - mountPath: /target
              name: plugins
      restartPolicy: Always
      serviceAccountName: velero
      volumes:
        - emptyDir: {}
          name: plugins
        - emptyDir: {}
          name: scratch
        - name: cloud-credentials
          secret:
            secretName: cloud-credentials
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      nodeSelector:
        node-role.kubernetes.io/master: ""

---
