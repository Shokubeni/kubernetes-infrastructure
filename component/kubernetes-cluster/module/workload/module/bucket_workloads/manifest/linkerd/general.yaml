---

kind: Namespace
apiVersion: v1
metadata:
  name: linkerd-service
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-identity
subjects:
  - kind: ServiceAccount
    name: linkerd-identity
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["extensions", "apps"]
    resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list" , "get", "watch"]
  - apiGroups: [""]
    resources: ["pods", "endpoints", "services", "replicationcontrollers", "namespaces"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["split.smi-spec.io"]
    resources: ["trafficsplits"]
    verbs: ["list", "get", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-controller
subjects:
  - kind: ServiceAccount
    name: linkerd-controller
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-controller
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["pods", "endpoints", "services"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["split.smi-spec.io"]
    resources: ["trafficsplits"]
    verbs: ["list", "get", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-destination
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["linkerd-config"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd-service

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["linkerd-config"]
  - apiGroups: [""]
    resources: ["namespaces", "configmaps"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["serviceaccounts", "pods"]
    verbs: ["list"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: Role
  name: linkerd-web
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-linkerd-service-web-check
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles", "clusterrolebindings"]
    verbs: ["list"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    verbs: ["list"]
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["list"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-linkerd-service-web-check
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-service-web-check
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-web-admin
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-tap-admin
subjects:
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-prometheus
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["nodes", "nodes/proxy", "pods"]
    verbs: ["get", "list", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-prometheus
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-prometheus
subjects:
  - kind: ServiceAccount
    name: linkerd-prometheus
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-prometheus
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-grafana
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: [""]
    resources: ["namespaces", "replicationcontrollers"]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list", "get", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
subjects:
  - kind: ServiceAccount
    name: linkerd-proxy-injector
    namespace: linkerd-service
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-service-proxy-injector
  apiGroup: rbac.authorization.k8s.io

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service

---

kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-tls
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
type: Opaque
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROekNDQWgrZ0F3SUJBZ0lSQUxkQTRUSUJXdEt5cmZtYTZHcWMvQXN3RFFZSktvWklodmNOQVFFTEJRQXcKTlRFek1ERUdBMVVFQXhNcWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMWE5sY25acApZMlV1YzNaak1CNFhEVEl3TURVeE16RXlNek15TVZvWERUSXhNRFV4TXpFeU16TXlNVm93TlRFek1ERUdBMVVFCkF4TXFiR2x1YTJWeVpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTFhObGNuWnBZMlV1YzNaak1JSUIKSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXpQYittcDNXT080cjJRV1dhM1NEV1liVQp0cS9zbUw2WUR1WHBlOE1SRy9tVWNkMngxZmMwMFBrb2tmb0N0VUNaK2t2WFJqWjdZSHplVzhQejFDTExZbk5DClZjU0JlRTNJRXQyMm1kRStHWjVDc1grYVlhcGtsRVJhMTlvbG5FRmkrdHJrSkg1RDY3bWRxYUhwZElLNGdKMUwKWEM3bnJCQjYySnFCRWIzRzdwVjdMM1lMNEdlUzVZak11N3hCRkJjSXhOQ2g5SmRLTlBFOCtMeE9ML2VQUloxVwp4ejZtUHZNVkhjZnE0UUdXT2lXNkREMnkwWEI1c01wcnJNRWhaaGVaSWZyb2pPcHVicVcwL1VwN1p1VHczMHNyCjBNUVJLTlJpdytwaEJmNWR2OFJaajN2KzhNdU8wcWF4MHh2QTI4VCt6OWE0NGFoQUFVSFI1M2t3UTI4Yk1RSUQKQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzRwpBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDOFJZQ3dnCnF0ZUpFSFBDQ0RpL2JJRE83K3ZSb2VGVEhiUVpya0lFSDhzelJpbWdCMFl6cm9lNXo1RTN4L0hPdW1zWjgzRE4KTXZGWkhxK2tJU1QxcjJhNjNmZVVJZWcvOGlHTXdkM2d0amJzVlk1b2dvNnZlcFJJdUF1Nk9kL1d6Z3lkMXFTcgo5M0FreDFtWkpva3lPMWI2OFY4MVZpVDNvYjF2MnFiNHpJdmVSdzA5SnloUC8rMHh3M2xGTEcxZUpoSjAzM3VUCk9EcXpHOFRObGR6VDBBQ0o1aG5wdEFHc3o5Tk9nYmEvSllzMG1sTzlOL2x2MzNYRHFRUkdFZFBJU1pITHBTc2kKd2pBa2UrdmxXaVQrUmY4bEVOZ3E1R1BldTF2bWdjUE5BVmt5ZGpmTFp6VWo3a29Wa2pBODQ5R3NYTUtxMmJVcQo4aHZMS1Rhbkt3d0l3bVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBelBiK21wM1dPTzRyMlFXV2EzU0RXWWJVdHEvc21MNllEdVhwZThNUkcvbVVjZDJ4CjFmYzAwUGtva2ZvQ3RVQ1ora3ZYUmpaN1lIemVXOFB6MUNMTFluTkNWY1NCZUUzSUV0MjJtZEUrR1o1Q3NYK2EKWWFwa2xFUmExOW9sbkVGaSt0cmtKSDVENjdtZHFhSHBkSUs0Z0oxTFhDN25yQkI2MkpxQkViM0c3cFY3TDNZTAo0R2VTNVlqTXU3eEJGQmNJeE5DaDlKZEtOUEU4K0x4T0wvZVBSWjFXeHo2bVB2TVZIY2ZxNFFHV09pVzZERDJ5CjBYQjVzTXByck1FaFpoZVpJZnJvak9wdWJxVzAvVXA3WnVUdzMwc3IwTVFSS05SaXcrcGhCZjVkdjhSWmozdisKOE11TzBxYXgweHZBMjhUK3o5YTQ0YWhBQVVIUjUza3dRMjhiTVFJREFRQUJBb0lCQURxY295QXA1Sm14R2g3YwpaekJoU0RKd3lTRlkyNHF1YmlOTWdlRWZYaVFtMGRsaDhUbmprRm4xOWpFUVVuZnNlbHZHRmxDQXdmVk1uL1dUCjZvVU9VaVRjR3VzVjM0UThrZXM3TmIxMHhaSmozR1NQdmVFUjdlTXNUT0lQQXRSVkttM2I3SU8zQzhzNzhDY1QKSXdScllVRitPWStwNWh3aE5rLzhsczR3KzlNN3JyaCtsbEFxamZXanFvWHJ0cW9Tek52K05lRkdzM0ExK1kxagpqcXVpVVIyUXZnR3diWS9zWXkwd2twUEhZNlZSbENKWDZNU2l2ZWppSE0wQ0VKQWgrMGM0NEttNkFHSkRUdWYwClhvMWtxNGxGNGxYQVY0MUduaTJEdmQxcWJEcDIxS0xyY25KOTdWM0dZc2Y4emRJemw0dVhrMnZzenRraGg5MVAKNUFPR1F6RUNnWUVBMjlLRlRtTW1XcTd4NVVRWW56VzFxeGh2WlNpeTEySlRtQnlLV1cyV1JhMGdtbFlUMVBiMwp1RU9OeGlRQ214Njh5b3dXQmtBN2xYbE03WHhvWHNNR3BHUkxGaS9oclRlSitxMzFXbWt3TG96OXJLRUxFcmZ5CmhLMW1nZHpKZkNROEZFbVF2QXQwSGd3Q2NPZGxSazJoUXZLWC95THY2cS83U2RLQ0ZhVkdzVFVDZ1lFQTdyS0EKY2VLWmEzWm1ZY3diMU5LdVhoMEJNbEFMTzV4VFpGM29jQkNEeURsMUZDajBoQmtXa21RdWlTazF5czlIdjk2ZwpUWlVpT1lBbG1JbUJ0SEVRUi9SSWczZ2oxejY4RjdMdnl2cGJPNjArbVdlY0VtQStBczNOL0MraTdpS2RPVGNBClVlR3djMGVmSnA3UU0vSjZ3RFNnTE04ZldIbEh1RlN0cG5uS25ZMENnWUJjNlJvWEM2bEdZdk15NkJsUUVhOTcKWlpTUHVTZitDVDB6NmJ4QUdDV1B4YUVtR29PL1c3TlFXcDB0eGtLanRkWXQ5Zy9KREpVaWxHYURhalhpOTZOegpFRUQ4VzdpVE1ncEx2Z01aOTZPNXlUWGZKU0k5QXlxcUVYQm1LeCt1TE5LSDhLQVFHdmMxUy9Zc0ttR1AyWGZ6CmgvM2VoTEhMREI2MkVSZVNkb3p1a1FLQmdRQy9QVjV4WUFaaE5jUkRXSDkzM0svOUVTbnpRSFF2ZDBqTTRmd24KUk9RQVdDQjRYWFBDSGtPYVdBOThydnE5R2FNM2swdEZ2VlZsVWtsTTArYUtSZ2V3VG9TR2FJdjJtUG1qMXlZTgpydFhIa3o3VE0xSzAya3owZkNVcmhwTDRUZDAvaU5TRnhkZFVGUzdxaDFUeU9iU2xKOFNwQWV6d09vTCtxVUZUClhzSzV4UUtCZ0V1b2hEa1BxRkFGelUvSTJ3dUhmMUhuUHl6RFRFeVN3N2UrR0UrcjIrK3JyazE5T0VPSlNUd3MKanAza2VseXhuOU9BbzM2RXFadXlaM2tyMWtkemRBMS9EblVKVitMNXQ5ejJ6YWhwVkFDV3ZLOXErdmxLMkwrQwp5MGNYQzg4a2ZQVFh1ZFhIdk5aZzd0WUtHUUhuZ2pRZHp6NUtSU05KNFRWNTc1QjBFMTNSCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

---

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
webhooks:
  - name: linkerd-proxy-injector.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-proxy-injector
        namespace: linkerd-service
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROekNDQWgrZ0F3SUJBZ0lSQUxkQTRUSUJXdEt5cmZtYTZHcWMvQXN3RFFZSktvWklodmNOQVFFTEJRQXcKTlRFek1ERUdBMVVFQXhNcWJHbHVhMlZ5WkMxd2NtOTRlUzFwYm1wbFkzUnZjaTVzYVc1clpYSmtMWE5sY25acApZMlV1YzNaak1CNFhEVEl3TURVeE16RXlNek15TVZvWERUSXhNRFV4TXpFeU16TXlNVm93TlRFek1ERUdBMVVFCkF4TXFiR2x1YTJWeVpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTFhObGNuWnBZMlV1YzNaak1JSUIKSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXpQYittcDNXT080cjJRV1dhM1NEV1liVQp0cS9zbUw2WUR1WHBlOE1SRy9tVWNkMngxZmMwMFBrb2tmb0N0VUNaK2t2WFJqWjdZSHplVzhQejFDTExZbk5DClZjU0JlRTNJRXQyMm1kRStHWjVDc1grYVlhcGtsRVJhMTlvbG5FRmkrdHJrSkg1RDY3bWRxYUhwZElLNGdKMUwKWEM3bnJCQjYySnFCRWIzRzdwVjdMM1lMNEdlUzVZak11N3hCRkJjSXhOQ2g5SmRLTlBFOCtMeE9ML2VQUloxVwp4ejZtUHZNVkhjZnE0UUdXT2lXNkREMnkwWEI1c01wcnJNRWhaaGVaSWZyb2pPcHVicVcwL1VwN1p1VHczMHNyCjBNUVJLTlJpdytwaEJmNWR2OFJaajN2KzhNdU8wcWF4MHh2QTI4VCt6OWE0NGFoQUFVSFI1M2t3UTI4Yk1RSUQKQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzRwpBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFDOFJZQ3dnCnF0ZUpFSFBDQ0RpL2JJRE83K3ZSb2VGVEhiUVpya0lFSDhzelJpbWdCMFl6cm9lNXo1RTN4L0hPdW1zWjgzRE4KTXZGWkhxK2tJU1QxcjJhNjNmZVVJZWcvOGlHTXdkM2d0amJzVlk1b2dvNnZlcFJJdUF1Nk9kL1d6Z3lkMXFTcgo5M0FreDFtWkpva3lPMWI2OFY4MVZpVDNvYjF2MnFiNHpJdmVSdzA5SnloUC8rMHh3M2xGTEcxZUpoSjAzM3VUCk9EcXpHOFRObGR6VDBBQ0o1aG5wdEFHc3o5Tk9nYmEvSllzMG1sTzlOL2x2MzNYRHFRUkdFZFBJU1pITHBTc2kKd2pBa2UrdmxXaVQrUmY4bEVOZ3E1R1BldTF2bWdjUE5BVmt5ZGpmTFp6VWo3a29Wa2pBODQ5R3NYTUtxMmJVcQo4aHZMS1Rhbkt3d0l3bVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    failurePolicy: Ignore
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    sideEffects: None

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
subjects:
  - kind: ServiceAccount
    name: linkerd-sp-validator
    namespace: linkerd-service
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-service-sp-validator
  apiGroup: rbac.authorization.k8s.io

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service

---

kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-tls
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
type: Opaque
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lSQU92WUFBNkJsSEN3WGUvbzVybzhWcWt3RFFZSktvWklodmNOQVFFTEJRQXcKTXpFeE1DOEdBMVVFQXhNb2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDMXpaWEoyYVdObApMbk4yWXpBZUZ3MHlNREExTVRNeE1qTXpNakZhRncweU1UQTFNVE14TWpNek1qRmFNRE14TVRBdkJnTlZCQU1UCktHeHBibXRsY21RdGMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXRjMlZ5ZG1salpTNXpkbU13Z2dFaU1BMEcKQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM1eGJydGJVZEFLZ0tGdHlIUUpDTEVBODZIWWs2UQplZUkwbXBqTURhL3ZDOWdsRGYwVkxtMStiUDNFUWd6NTlOUkJkZjl3WHpjektPOUN6VXkrWlBtSFVPWWxGUWpqCkF0Ly9lK3pQNUxuSVhUZDNJT0hEZE1aVVpROHVORytiWjJoS2NmdWZST1ZOL3NENmF2bFM1Mm1DZXlsN3dWOXUKUXUxTm1MbXFOZkRiRWFzWDRaQzZPd1NQa0hZSEtqK3VSRmJUQXdIbjlUNXM0RVdyRklaQXlPV2h4amRLMnRhTgpOOHlvN1RJdUxyTDV6bWkvVmpFaUIzaU9PVCtVb3VLell5K1RQbm8rUDl0RVNiMDRBVUtWaUgzZUlNVnFHeE9ICnpYTkhNRFVjc0xXeHlpUDhIWU9GL083L0FSdjRCT0JNcVZBUU1NeXQvNzlMMEpQaExYanl1cW1WQWdNQkFBR2oKUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSApBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTEtzSVQxSmpJc1RQCmExUWxtcmFQdW5JdnkrN3o2b2hhejlFWHJVMHJWdUppZnJIZDZkNXRJMU5YUytUVXI3VWIwUGRaSi9JdFhTNVYKak1pY2YyT01vUWprUjA2UC92OWxGT0JROW9JdGxna0RrOVU0Q2F1UEtSK0I3UVBJbkV5STQvTkpYT1d4b3RzLwo5RHJsdEFjbEwyUGVYaUd0aVQyVVU2Nm5teGNTVnBKc21jY1VuWVY1cXBNdVlVZHV2Zlc5K3RIZU1hMUtVcExxCi9tbkhnbmhCYTdodVVZU1A2UmhnRFdpRjBYbC9iRnp4dndGVVA3bEM3SThvRmk1MTBIT3k3SDl4RUtRcG1rTzkKemJFcXQyTWZFZTJDaWFUOTVLRllOTHVvTmU0MStXbi9RNDZQR2kyNWxxV0FuOGZMcXZsTTZ6Q25zeHZuUk04OApxclFCZlp4aHhBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdWNXNjdXMUhRQ29DaGJjaDBDUWl4QVBPaDJKT2tIbmlOSnFZekEydjd3dllKUTM5CkZTNXRmbXo5eEVJTStmVFVRWFgvY0Y4M015anZRczFNdm1UNWgxRG1KUlVJNHdMZi8zdnN6K1M1eUYwM2R5RGgKdzNUR1ZHVVBMalJ2bTJkb1NuSDduMFRsVGY3QSttcjVVdWRwZ25zcGU4RmZia0x0VFppNXFqWHcyeEdyRitHUQp1anNFajVCMkJ5by9ya1JXMHdNQjUvVStiT0JGcXhTR1FNamxvY1kzU3RyV2pUZk1xTzB5TGk2eStjNW92MVl4CklnZDRqamsvbEtMaXMyTXZrejU2UGovYlJFbTlPQUZDbFloOTNpREZhaHNUaDgxelJ6QTFITEMxc2Nvai9CMkQKaGZ6dS93RWIrQVRnVEtsUUVERE1yZisvUzlDVDRTMTQ4cnFwbFFJREFRQUJBb0lCQUZjSzZZbmpvUFhVZVRnVAoxWGtENVhJNFltV1d6ejdzak91ZTRDY0Q1c0kzcDMrOUxTN21nUkV5bWppQnhqaTcyVlFPcUxBTFBQN3dtQ0tSCnRQcWtyeklTMnJMWFIwR3VrQ3ZSOGVSNncvMjRoNHQrMGFsV0pyTldZcVdBbGlhWGJnc3JtdjFHTjdheXZkTFgKbXBpWXF4d2kvdzNvVGdHSXhFMk9XTGdDN0NhSU5EdVU2Q3RkU2Q5aDJ1b3AwczZaQnM4ZFRkQlVJajltZXd3OAo4aSsvbUwxOUo0WVEyK1J6aFJHZVpGWHJqN1E1dGZSZEl3NTV0RkNHNlI3aGxpSlFlYWd0MVJNbithRmhLdXlsCkdIS01WTWFMUVVsSU9CaHZySVdVeFhRL2dtWmI5cFNYcUtTL0t3ZU1wcGQ2MGE3QnhwUlNmWDB2Q3dBZ2trRFYKZCtyV3JnRUNnWUVBdytVRG53ajhjSE14MlFvNVlkUS9LM1F6VHo4eVBDMStjSnlCb1FGVmwrclRzU1h3VDMwYgpjVTZuZzVDcU85czZrVFd3bUpRSnVaRVVWT3AzR2FoMXRWa1V4a3RKdVVMNUxwMSs0WFV2TUlEVVpmbURjSEJtCjlrczVUanR0UnM5UzFkRy96QVYxSGg3UkkyamFiWUlOOTFVVDJvTW9ERWNrdFdmakR1VXVGSUVDZ1lFQThzV2wKQTRYTUdFVDlNYzBGMVlVRTJXYXljY2JJZ1owYmY2NTFTODFZZUxMallEV3Jocm9VU20rY1dCbmhGMG43N1JpZgpqbmhrY3hpeUZuRjl2STRObFR1eFc3UVh2N1BHZEZQTHZqWGNHdGdYZWhKVTRYUTVrYzYrTFhXckRnKzVUT2tMCmRwOEpZNmdvY3kwODFHK3doUGxNRVVaZjhuTzJyY1EzWkVHWmV4VUNnWUJsYWNJZUt3REZGbDNRQnNMK0ttc3AKaTlha1NBc3hyRHV4QU5UN0RUM0tqLzlYemxSQ1VucEtobldpWHRwQ2NwUTNhSndyNFRmSG9adnMraFQrYTMvRQppb0YreHFzOEJiZ0tzZTVsdWN6Y1IxV3VGU1krcDNJbVAzdERUUENkbitjNldvUDRrenEyaFMyd0x6QWxVUmI1CjNFbVM3aU5sZDg5Qk9xOEpud3ZrQVFLQmdCb3R1K1NNV2Z6SCs3R1NGUzM0SVJTOFlVT3BsdGQ3TklycEtoYloKZHMvVkluV3VjK2VjU3pIWHBUbE8yUm5relhpOHJmL3o5WWovd2J4djBvb3htejliWjMybkJ1U1NJelZLRCs5Ygo2WGN2bENDQ3Q0cDBPUDBER1RqWHRuRld1cm1UYTd3SDNFQlYwcjdRd3YxNWFjUjlDWG5YWitOQ0hSSFIxZE5HCnk2RWRBb0dBS1p5SzF2aHR1MnV2dDdISDV5M0w3N2VkMWFhRGxVeUNENzhyNS9rYmpOaXIrUHl5STFSQzJMT3cKK0ZuZEkrOW9XY0d2WjNjMVJENlJGamt6VXpLVk10QXRNVkxHcVlSYVhyTGtiV00zSDlQSmlKUWVTczBUZkFPSApqZ25rZGhhSGRkcVMvbitKTFNwZXNKeTRha3BicXNMQnovTVB3dWdZNGg1L2JiT1FpNnM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

---

apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
webhooks:
  - name: linkerd-sp-validator.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-sp-validator
        namespace: linkerd-service
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNekNDQWh1Z0F3SUJBZ0lSQU92WUFBNkJsSEN3WGUvbzVybzhWcWt3RFFZSktvWklodmNOQVFFTEJRQXcKTXpFeE1DOEdBMVVFQXhNb2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDMXpaWEoyYVdObApMbk4yWXpBZUZ3MHlNREExTVRNeE1qTXpNakZhRncweU1UQTFNVE14TWpNek1qRmFNRE14TVRBdkJnTlZCQU1UCktHeHBibXRsY21RdGMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXRjMlZ5ZG1salpTNXpkbU13Z2dFaU1BMEcKQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM1eGJydGJVZEFLZ0tGdHlIUUpDTEVBODZIWWs2UQplZUkwbXBqTURhL3ZDOWdsRGYwVkxtMStiUDNFUWd6NTlOUkJkZjl3WHpjektPOUN6VXkrWlBtSFVPWWxGUWpqCkF0Ly9lK3pQNUxuSVhUZDNJT0hEZE1aVVpROHVORytiWjJoS2NmdWZST1ZOL3NENmF2bFM1Mm1DZXlsN3dWOXUKUXUxTm1MbXFOZkRiRWFzWDRaQzZPd1NQa0hZSEtqK3VSRmJUQXdIbjlUNXM0RVdyRklaQXlPV2h4amRLMnRhTgpOOHlvN1RJdUxyTDV6bWkvVmpFaUIzaU9PVCtVb3VLell5K1RQbm8rUDl0RVNiMDRBVUtWaUgzZUlNVnFHeE9ICnpYTkhNRFVjc0xXeHlpUDhIWU9GL083L0FSdjRCT0JNcVZBUU1NeXQvNzlMMEpQaExYanl1cW1WQWdNQkFBR2oKUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSApBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTEtzSVQxSmpJc1RQCmExUWxtcmFQdW5JdnkrN3o2b2hhejlFWHJVMHJWdUppZnJIZDZkNXRJMU5YUytUVXI3VWIwUGRaSi9JdFhTNVYKak1pY2YyT01vUWprUjA2UC92OWxGT0JROW9JdGxna0RrOVU0Q2F1UEtSK0I3UVBJbkV5STQvTkpYT1d4b3RzLwo5RHJsdEFjbEwyUGVYaUd0aVQyVVU2Nm5teGNTVnBKc21jY1VuWVY1cXBNdVlVZHV2Zlc5K3RIZU1hMUtVcExxCi9tbkhnbmhCYTdodVVZU1A2UmhnRFdpRjBYbC9iRnp4dndGVVA3bEM3SThvRmk1MTBIT3k3SDl4RUtRcG1rTzkKemJFcXQyTWZFZTJDaWFUOTVLRllOTHVvTmU0MStXbi9RNDZQR2kyNWxxV0FuOGZMcXZsTTZ6Q25zeHZuUk04OApxclFCZlp4aHhBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    failurePolicy: Ignore
    rules:
      - operations: [ "CREATE" , "UPDATE" ]
        apiGroups: ["linkerd.io"]
        apiVersions: ["v1alpha1", "v1alpha2"]
        resources: ["serviceprofiles"]
    sideEffects: None

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-tap
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "replicationcontrollers", "namespaces", "nodes"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list" , "get", "watch"]

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-tap-admin
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["tap.linkerd.io"]
    resources: ["*"]
    verbs: ["watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-tap
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-tap
subjects:
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-linkerd-service-tap-auth-delegator
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-tap
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-linkerd-service-tap-auth-reader
  namespace: kube-system
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service

---

kind: Secret
apiVersion: v1
metadata:
  name: linkerd-tap-tls
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
type: Opaque
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lSQVBSMURIL2hYR2pWc3FRU1oxNTlhMG93RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDMXpaWEoyYVdObExuTjJZekFlRncweQpNREExTVRNeE1qTXpNakZhRncweU1UQTFNVE14TWpNek1qRmFNQ294S0RBbUJnTlZCQU1USDJ4cGJtdGxjbVF0CmRHRndMbXhwYm10bGNtUXRjMlZ5ZG1salpTNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUM3Q1JLWmt5WDRBdS80MXFkdk1obGkxd3lJL2V3OGZONmk2Ynk2enc0Q00yVG9MTlgzNmx1bAp0TEI5UFFoQndqcW5EWmIvUmVxM2UvK1VJSkhBbysyZjFXQ2NTSUl1eXAyeEg4NHA2S2dzTVMvVThuRHAvNVZlClEveDJ5enlVWWZoR0g2aVZmQzNwUzEyYWpyY0ZSL29xVGhIU2NFTzJuVUpVK2RPNGVrYTRjbGgwUTh5ckdxVk4KM3V0S1kxUFVST01CeXJYd1BiWExCaUdaS1hvendCNU9WdXdRRTFZUjJDMk8wcFpvdTNBN0VMYjA3OEZhZHFKYwpNYVo4ei9mSXlSUC8wMFd3ZjJuL0FJK1pIbkE4WkZDZmhQNDBTamhxcStTRDdhRm5ZZW9VQ1dYNVh4bEU2ZXgzCkNvQ0MrY05GcXJ3RE41bjlISDg2dWdBN1BoaG9ud1Q1QWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbk5CTGpyeVN6cVJNcS9PMERMQ0NMbElyWG91SmQrZXJTYWRyCnYxbHN1RUVZVDRFU2xWMU50Q3k5a2p3b2x1dlk2cmJPRGdQa21yM2JwbzUzNVNEZE5OaWRSYldraWJ5RVFrR3oKTWUrdG1kaHNnY0NaYzlhQnoxSlRCZzUvaEx5ZjFISXNLWTRxeXRubStkU0lmN2xlbVdiWCt4dXlRQm9lWXNhLwpoQXhsb0tyd01adEY2NzRuN1FPWHVtc2lYZjQxSkhlZWpvYUNDYzJqOXpPdW9kMHBkSWh6bEU3UW1JRVozQlJZCmJ4THBLTG5PWGtGcEd6OUtYVzlreE56MXlIa3FCd2xDRWZWODBKK0RvYm8vdDdUUk93bDhjWWxxRjZYU1c1aTgKMzN3OGZPZXJwREhGMS81bWxkN2U4UXM0QmxBNElseCtGUEgxQ25Kc3g4QjhLdGRCcWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdXdrU21aTWwrQUx2K05hbmJ6SVpZdGNNaVAzc1BIemVvdW04dXM4T0FqTms2Q3pWCjkrcGJwYlN3ZlQwSVFjSTZwdzJXLzBYcXQzdi9sQ0NSd0tQdG45VmduRWlDTHNxZHNSL09LZWlvTERFdjFQSncKNmYrVlhrUDhkc3M4bEdINFJoK29sWHd0NlV0ZG1vNjNCVWY2S2s0UjBuQkR0cDFDVlBuVHVIcEd1SEpZZEVQTQpxeHFsVGQ3clNtTlQxRVRqQWNxMThEMjF5d1lobVNsNk04QWVUbGJzRUJOV0VkZ3RqdEtXYUx0d094QzI5Ty9CClduYWlYREdtZk0vM3lNa1QvOU5Gc0g5cC93Q1BtUjV3UEdSUW40VCtORW80YXF2a2crMmhaMkhxRkFsbCtWOFoKUk9uc2R3cUFndm5EUmFxOEF6ZVovUngvT3JvQU96NFlhSjhFK1FJREFRQUJBb0lCQUFuNHM5c29NekFEeUJOMgpManNKYXIwUVJnVFB0TmFNdWJucHlEd1ZhZVBJSmFzVEtOMHN5M0lNTGhTZk9sOTNJWFZpamhoUisrK0lWdG5vCjJweHdvT3lTamJJSFU1bDNCKzAzaXVCRkhTSXVCU1RQUUNIWmxIY1FITmVnZ2p4TzlOT1lRSDZudmpMZjU3K2oKdURJNTRpWjdQd3YvSEQwU0tVVXFoSlVqUDczNWswaVdmTHZXQkdwUEYycVZzTjMxUU5NSzMvcGt5VEpVV3h5KwpYZlp4eWI2VmdkcldlcnU1ZXJNUFVNVWdKVFVDcWZTQUdRYldIaVp1Qzc5bVhsTFpiWStRaDUzNWZzNnNadGhGCnRhTENPQmVRWGo4QjNDWitzN20wWHZuTXNCNFQxTUFUaHJoV0Rya2xrZHJjdi9IK3UrVVdVWjZrdTZWMzM3blYKYk9teG1qa0NnWUVBNlN5OE80Rkd4V3huUVByb04xY2JGSUhtdVFvNi9hMG1tUmVNV3lCRVI0ZXhuZG1rbnlYVQpxa0NxbjBIczN3aHR0M3ZjQ0RKejJaYUtVWnRaS0ZEczJmYnpUT3NMQTNEUUhscEhLczlSVEM4V2xzVU9iWGJICk5MK0lwOFNrSXBJY3R1b0hlQXU2Y1RqWUFodXdEZ1M3eHRoQ2J0QWlxTEZiTHRBUUlhM0UyUjhDZ1lFQXpWZ2EKNHVoRlJwUkhWQVlobmcyajBJZUlVOWswdCtOd0R6MWRub0QzRUF0dEpsUk5NR0xXNzBOMU0rNmR2dnFyUjZGZQo3bTFpc1pSQm56Y3VBSGdHWmpkU0NaWUtzTERVYzlWd3M3dnIrZWVJTlYxWktYRnB1ZGt5RTdUdndTWjlRVStCClZaN1RPMmxCOUFwOFdjS1JueW5xa1BMR1llRGpXTEdVVnFFcnB1Y0NnWUVBd21QVkdSYVJWWTBtRjNvVmxlMDgKV2tCaGhPb09lK1dhUkE3cHFCNmlUYS9HVjM1V1M0ZFNZQTFCTVR2WXFhZHhNSUpGMFYrZVRVdS9USUZpTnNZZwpieVg5ZDZhTHEvYWt5bWtnNDRPcWx3UzZwRDdyNUQ0ZG5OQUFzVHl5U1UvZU9HK3FnbDNrdFBkYXZZY3Zvc0EzCmUzSlhEK0xjd2gzNWtuRkt3WWtJanFrQ2dZQjV3N3I5dnBvRnhqdWR1WjBKcWpEdm9NN1lXYjZISkpqNGtIMEoKVnBRcXNYdmg5SzlvOTlOWVFmb245MkVYTkhHSW9rbzJ2Q3AvL3RnQzM2ZXBvNEszN2luNWdUMkpsUElHVmhUawpuNVRJdGVEeE5BK0JJYjE5OVN0YXdEcERvTjA1Y3puUVdjUU1RTmhaTERhY3kyR3FyaUpvSFc1QjhDY2dHdjFKCmVYejNGUUtCZ0RnMGFoZU1QNFhTMDZZZ2pkYTFIL2JPRmZTUG14VEtUa1lQV3hUMW45clZuc2dFQktyMlFXSWQKdWEwSER0Y09HdDVvWitIaE00V3daT20zZk5ZNTB5NzVqYXdiZm9GZTY4UXpFZEt0blI3bGRiZlZuNi9Fa0Q5awowZ1V1L2dlK296NW4yZmNBdW1sWEFWWFdNNmxRM0x1VmN2L3FzV29zaHBrNVQ4K0FUVU5vCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

---

apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.tap.linkerd.io
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
spec:
  group: tap.linkerd.io
  version: v1alpha1
  groupPriorityMinimum: 1000
  versionPriority: 100
  service:
    name: linkerd-tap
    namespace: linkerd-service
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lSQVBSMURIL2hYR2pWc3FRU1oxNTlhMG93RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDMXpaWEoyYVdObExuTjJZekFlRncweQpNREExTVRNeE1qTXpNakZhRncweU1UQTFNVE14TWpNek1qRmFNQ294S0RBbUJnTlZCQU1USDJ4cGJtdGxjbVF0CmRHRndMbXhwYm10bGNtUXRjMlZ5ZG1salpTNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUM3Q1JLWmt5WDRBdS80MXFkdk1obGkxd3lJL2V3OGZONmk2Ynk2enc0Q00yVG9MTlgzNmx1bAp0TEI5UFFoQndqcW5EWmIvUmVxM2UvK1VJSkhBbysyZjFXQ2NTSUl1eXAyeEg4NHA2S2dzTVMvVThuRHAvNVZlClEveDJ5enlVWWZoR0g2aVZmQzNwUzEyYWpyY0ZSL29xVGhIU2NFTzJuVUpVK2RPNGVrYTRjbGgwUTh5ckdxVk4KM3V0S1kxUFVST01CeXJYd1BiWExCaUdaS1hvendCNU9WdXdRRTFZUjJDMk8wcFpvdTNBN0VMYjA3OEZhZHFKYwpNYVo4ei9mSXlSUC8wMFd3ZjJuL0FJK1pIbkE4WkZDZmhQNDBTamhxcStTRDdhRm5ZZW9VQ1dYNVh4bEU2ZXgzCkNvQ0MrY05GcXJ3RE41bjlISDg2dWdBN1BoaG9ud1Q1QWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbk5CTGpyeVN6cVJNcS9PMERMQ0NMbElyWG91SmQrZXJTYWRyCnYxbHN1RUVZVDRFU2xWMU50Q3k5a2p3b2x1dlk2cmJPRGdQa21yM2JwbzUzNVNEZE5OaWRSYldraWJ5RVFrR3oKTWUrdG1kaHNnY0NaYzlhQnoxSlRCZzUvaEx5ZjFISXNLWTRxeXRubStkU0lmN2xlbVdiWCt4dXlRQm9lWXNhLwpoQXhsb0tyd01adEY2NzRuN1FPWHVtc2lYZjQxSkhlZWpvYUNDYzJqOXpPdW9kMHBkSWh6bEU3UW1JRVozQlJZCmJ4THBLTG5PWGtGcEd6OUtYVzlreE56MXlIa3FCd2xDRWZWODBKK0RvYm8vdDdUUk93bDhjWWxxRjZYU1c1aTgKMzN3OGZPZXJwREhGMS81bWxkN2U4UXM0QmxBNElseCtGUEgxQ25Kc3g4QjhLdGRCcWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==

---

apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: linkerd-linkerd-service-control-plane
  labels:
    linkerd.io/control-plane-ns: linkerd-service
spec:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  allowedCapabilities:
    - NET_ADMIN
    - NET_RAW
  requiredDropCapabilities:
    - ALL
  hostNetwork: false
  hostIPC: false
  hostPID: false
  seLinux:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  volumes:
    - configMap
    - emptyDir
    - secret
    - projected
    - downwardAPI
    - persistentVolumeClaim

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-psp
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ['policy', 'extensions']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames:
      - linkerd-linkerd-service-control-plane

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-psp
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: Role
  name: linkerd-psp
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-controller
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-grafana
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-identity
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-prometheus
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-proxy-injector
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-sp-validator
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
data:
  global: |
    {"linkerdNamespace":"linkerd-service","cniEnabled":false,"version":"stable-2.7.1","identityContext":{"trustDomain":"cluster.local","trustAnchorsPem":"-----BEGIN CERTIFICATE-----\nMIIBkjCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0\neS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MTMxMjMzMTFa\nFw0yMTA1MTMxMjMzMzFaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy\ndmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQ2ub\nGOKIYuhPr+NLmKSRCKxX//CIZV7cBvn8kkwsPExWF06pFFzspjGMCah/13jeqgyE\nai6QUUEHRPQptt2rOqNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG\nAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0cA\nMEQCIHLjxB+ecMIRN20HDvr0TeuLhNFUpI+f/HuR8cARiffVAiAk5gHIGMlBo2aj\neiU+TQ7k6W0Mc4OFao2MR9XDBNCNMA==\n-----END CERTIFICATE-----\n","issuanceLifetime":"86400s","clockSkewAllowance":"20s","scheme":"linkerd.io/tls"},"autoInjectContext":null,"omitWebhookSideEffects":false,"clusterDomain":"cluster.local"}
  proxy: |
    {"proxyImage":{"imageName":"gcr.io/linkerd-io/proxy","pullPolicy":"IfNotPresent"},"proxyInitImage":{"imageName":"gcr.io/linkerd-io/proxy-init","pullPolicy":"IfNotPresent"},"controlPort":{"port":4190},"ignoreInboundPorts":[],"ignoreOutboundPorts":[],"inboundPort":{"port":4143},"adminPort":{"port":4191},"outboundPort":{"port":4140},"resource":{"requestCpu":"","requestMemory":"","limitCpu":"","limitMemory":""},"proxyUid":"2102","logLevel":{"level":"warn,linkerd=info"},"disableExternalProfiles":true,"proxyVersion":"stable-2.7.1","proxyInitImageVersion":"v1.3.2","debugImage":{"imageName":"gcr.io/linkerd-io/debug","pullPolicy":"IfNotPresent"},"debugImageVersion":"stable-2.7.1"}
  install: |
    {"cliVersion":"stable-2.7.1","flags":[]}

---

kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
    linkerd.io/identity-issuer-expiry: 2021-05-13T12:33:31Z
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJrakNDQVRtZ0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQXhNUzh3TFFZRFZRUURFeVpwWkdWdWRHbDAKZVM1c2FXNXJaWEprTFhObGNuWnBZMlV1WTJ4MWMzUmxjaTVzYjJOaGJEQWVGdzB5TURBMU1UTXhNak16TVRGYQpGdzB5TVRBMU1UTXhNak16TXpGYU1ERXhMekF0QmdOVkJBTVRKbWxrWlc1MGFYUjVMbXhwYm10bGNtUXRjMlZ5CmRtbGpaUzVqYkhWemRHVnlMbXh2WTJGc01Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRVEydWIKR09LSVl1aFByK05MbUtTUkNLeFgvL0NJWlY3Y0J2bjhra3dzUEV4V0YwNnBGRnpzcGpHTUNhaC8xM2plcWd5RQphaTZRVVVFSFJQUXB0dDJyT3FOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUFvR0NDcUdTTTQ5QkFNQ0EwY0EKTUVRQ0lITGp4QitlY01JUk4yMEhEdnIwVGV1TGhORlVwSStmL0h1UjhjQVJpZmZWQWlBazVnSElHTWxCbzJhagplaVUrVFE3azZXME1jNE9GYW8yTVI5WERCTkNOTUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUxZcllMTkorSFBKNXJuWWhldEJkVHpMZTFoeGd6cmlHb1FGdWo3Z3didkFvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFUTJ1YkdPS0lZdWhQcitOTG1LU1JDS3hYLy9DSVpWN2NCdm44a2t3c1BFeFdGMDZwRkZ6cwpwakdNQ2FoLzEzamVxZ3lFYWk2UVVVRUhSUFFwdHQyck9nPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-identity
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-identity
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - identity
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9990
            initialDelaySeconds: 10
          name: identity
          ports:
            - containerPort: 8080
              name: grpc
            - containerPort: 9990
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9990
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
            - mountPath: /var/run/linkerd/identity/issuer
              name: identity-issuer
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkjCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MTMxMjMzMTFa
                Fw0yMTA1MTMxMjMzMzFaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQ2ub
                GOKIYuhPr+NLmKSRCKxX//CIZV7cBvn8kkwsPExWF06pFFzspjGMCah/13jeqgyE
                ai6QUUEHRPQptt2rOqNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0cA
                MEQCIHLjxB+ecMIRN20HDvr0TeuLhNFUpI+f/HuR8cARiffVAiAk5gHIGMlBo2aj
                eiU+TQ7k6W0Mc4OFao2MR9XDBNCNMA==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: localhost.:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-identity
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - name: identity-issuer
          secret:
            secretName: linkerd-identity-issuer
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-controller-api
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: controller
  ports:
    - name: http
      port: 8085
      targetPort: 8085

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-controller
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: controller
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-controller
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: controller
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-controller
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - public-api
            - -prometheus-url=http://linkerd-prometheus.linkerd-service.svc.cluster.local:9090
            - -destination-addr=linkerd-dst.linkerd-service.svc.cluster.local:8086
            - -controller-namespace=linkerd-service
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9995
            initialDelaySeconds: 10
          name: public-api
          ports:
            - containerPort: 8085
              name: http
            - containerPort: 9995
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9995
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkjCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MTMxMjMzMTFa
                Fw0yMTA1MTMxMjMzMzFaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQ2ub
                GOKIYuhPr+NLmKSRCKxX//CIZV7cBvn8kkwsPExWF06pFFzspjGMCah/13jeqgyE
                ai6QUUEHRPQptt2rOqNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0cA
                MEQCIHLjxB+ecMIRN20HDvr0TeuLhNFUpI+f/HuR8cARiffVAiAk5gHIGMlBo2aj
                eiU+TQ7k6W0Mc4OFao2MR9XDBNCNMA==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-controller
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: grpc
      port: 8086
      targetPort: 8086

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-destination
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-destination
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - destination
            - -addr=:8086
            - -controller-namespace=linkerd-service
            - -enable-h2-upgrade=true
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9996
            initialDelaySeconds: 10
          name: destination
          ports:
            - containerPort: 8086
              name: grpc
            - containerPort: 9996
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9996
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: localhost.:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkjCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MTMxMjMzMTFa
                Fw0yMTA1MTMxMjMzMzFaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQ2ub
                GOKIYuhPr+NLmKSRCKxX//CIZV7cBvn8kkwsPExWF06pFFzspjGMCah/13jeqgyE
                ai6QUUEHRPQptt2rOqNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0cA
                MEQCIHLjxB+ecMIRN20HDvr0TeuLhNFUpI+f/HuR8cARiffVAiAk5gHIGMlBo2aj
                eiU+TQ7k6W0Mc4OFao2MR9XDBNCNMA==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-destination
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  schedule: "43 12 * * * "
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.7.1
        spec:
          nodeSelector:
            beta.kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
            - name: heartbeat
              image: gcr.io/linkerd-io/controller:stable-2.7.1
              imagePullPolicy: IfNotPresent
              args:
                - "heartbeat"
                - "-prometheus-url=http://linkerd-prometheus.linkerd-service.svc.cluster.local:9090"
                - "-controller-namespace=linkerd-service"
                - "-log-level=info"
              securityContext:
                runAsUser: 2103

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: web
  ports:
    - name: http
      port: 8084
      targetPort: 8084
    - name: admin-http
      port: 9994
      targetPort: 9994

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: web
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-web
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: web
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-web
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: web
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-web
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - -api-addr=linkerd-controller-api.linkerd-service.svc.cluster.local:8085
            - -grafana-addr=linkerd-grafana.linkerd-service.svc.cluster.local:3000
            - -controller-namespace=linkerd-service
            - -log-level=info
            - -enforced-host=^(localhost|127\.0\.0\.1|linkerd-web\.linkerd-service\.svc\.cluster\.local|linkerd-web\.linkerd-service\.svc|\[::1\])(:\d+)?$
          image: gcr.io/linkerd-io/web:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9994
            initialDelaySeconds: 10
          name: web
          ports:
            - containerPort: 8084
              name: http
            - containerPort: 9994
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9994
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkjCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MTMxMjMzMTFa
                Fw0yMTA1MTMxMjMzMzFaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQ2ub
                GOKIYuhPr+NLmKSRCKxX//CIZV7cBvn8kkwsPExWF06pFFzspjGMCah/13jeqgyE
                ai6QUUEHRPQptt2rOqNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0cA
                MEQCIHLjxB+ecMIRN20HDvr0TeuLhNFUpI+f/HuR8cARiffVAiAk5gHIGMlBo2aj
                eiU+TQ7k6W0Mc4OFao2MR9XDBNCNMA==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-web
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-prometheus-config
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
data:
  prometheus.yml: |-
    global:
      scrape_interval: 10s
      scrape_timeout: 10s
      evaluation_interval: 10s

    rule_files:
    - /etc/prometheus/*_rules.yml

    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']

    - job_name: 'grafana'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd-service']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        action: keep
        regex: ^grafana$

    #  Required for: https://grafana.com/grafana/dashboards/315
    - job_name: 'kubernetes-nodes-cadvisor'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
      metric_relabel_configs:
      - source_labels: [__name__]
        regex: '(container|machine)_(cpu|memory|network|fs)_(.+)'
        action: keep
      - source_labels: [__name__]
        regex: 'container_memory_failures_total' # unneeded large metric
        action: drop

    - job_name: 'linkerd-controller'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd-service']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
        - __meta_kubernetes_pod_container_port_name
        action: keep
        regex: (.*);admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: component

    - job_name: 'linkerd-proxy'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        - __meta_kubernetes_pod_container_port_name
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns
        action: keep
        regex: ^linkerd-proxy;linkerd-admin;linkerd-service$
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
      # special case k8s' "job" label, to not interfere with prometheus' "job"
      # label
      # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =>
      # k8s_job=foo
      - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]
        action: replace
        target_label: k8s_job
      # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job
      # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =>
      # deployment=foo
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # drop all labels that we just made copies of in the previous labelmap
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # __meta_kubernetes_pod_label_linkerd_io_foo=bar =>
      # foo=bar
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_(.+)
      # Copy all pod labels to tmp labels
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: __tmp_pod_label_$1
      # Take `linkerd_io_` prefixed labels and copy them without the prefix
      - action: labelmap
        regex: __tmp_pod_label_linkerd_io_(.+)
        replacement:  __tmp_pod_label_$1
      # Drop the `linkerd_io_` originals
      - action: labeldrop
        regex: __tmp_pod_label_linkerd_io_(.+)
      # Copy tmp labels into real labels
      - action: labelmap
        regex: __tmp_pod_label_(.+)

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-prometheus
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: prometheus
  ports:
    - name: admin-http
      port: 9090
      targetPort: 9090

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-prometheus
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: prometheus
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-prometheus
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: prometheus
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-prometheus
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - --storage.tsdb.path=/data
            - --storage.tsdb.retention.time=6h
            - --config.file=/etc/prometheus/prometheus.yml
            - --log.level=info
          image: prom/prometheus:v2.15.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          name: prometheus
          ports:
            - containerPort: 9090
              name: admin-http
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            runAsUser: 65534
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /etc/prometheus
              name: prometheus-config
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_OUTBOUND_ROUTER_CAPACITY
              value: "10000"
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkjCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MTMxMjMzMTFa
                Fw0yMTA1MTMxMjMzMzFaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQ2ub
                GOKIYuhPr+NLmKSRCKxX//CIZV7cBvn8kkwsPExWF06pFFzspjGMCah/13jeqgyE
                ai6QUUEHRPQptt2rOqNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0cA
                MEQCIHLjxB+ecMIRN20HDvr0TeuLhNFUpI+f/HuR8cARiffVAiAk5gHIGMlBo2aj
                eiU+TQ7k6W0Mc4OFao2MR9XDBNCNMA==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-prometheus
      volumes:
        - emptyDir: {}
          name: data
        - configMap:
            name: linkerd-prometheus-config
          name: prometheus-config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-grafana-config
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
data:
  grafana.ini: |-
    instance_name = linkerd-grafana

    [server]
    root_url = %(protocol)s://%(domain)s:/grafana/

    [auth]
    disable_login_form = true

    [auth.anonymous]
    enabled = true
    org_role = Editor

    [auth.basic]
    enabled = false

    [analytics]
    check_for_updates = false

    [panels]
    disable_sanitize_html = true

  datasources.yaml: |-
    apiVersion: 1
    datasources:
    - name: prometheus
      type: prometheus
      access: proxy
      orgId: 1
      url: http://linkerd-prometheus.linkerd-service.svc.cluster.local:9090
      isDefault: true
      jsonData:
        timeInterval: "5s"
      version: 1
      editable: true

  dashboards.yaml: |-
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: true
      editable: true
      options:
        path: /var/lib/grafana/dashboards
        homeDashboardId: linkerd-top-line

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-grafana
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: grafana
  ports:
    - name: http
      port: 3000
      targetPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-grafana
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: grafana
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-grafana
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: grafana
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-grafana
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - env:
            - name: GF_PATHS_DATA
              value: /data
          image: gcr.io/linkerd-io/grafana:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
          name: grafana
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          securityContext:
            runAsUser: 472
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /etc/grafana
              name: grafana-config
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkjCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MTMxMjMzMTFa
                Fw0yMTA1MTMxMjMzMzFaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQ2ub
                GOKIYuhPr+NLmKSRCKxX//CIZV7cBvn8kkwsPExWF06pFFzspjGMCah/13jeqgyE
                ai6QUUEHRPQptt2rOqNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0cA
                MEQCIHLjxB+ecMIRN20HDvr0TeuLhNFUpI+f/HuR8cARiffVAiAk5gHIGMlBo2aj
                eiU+TQ7k6W0Mc4OFao2MR9XDBNCNMA==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-grafana
      volumes:
        - emptyDir: {}
          name: data
        - configMap:
            items:
              - key: grafana.ini
                path: grafana.ini
              - key: datasources.yaml
                path: provisioning/datasources/datasources.yaml
              - key: dashboards.yaml
                path: provisioning/dashboards/dashboards.yaml
            name: linkerd-grafana-config
          name: grafana-config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-proxy-injector
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - proxy-injector
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9995
            initialDelaySeconds: 10
          name: proxy-injector
          ports:
            - containerPort: 8443
              name: proxy-injector
            - containerPort: 9995
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9995
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkjCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MTMxMjMzMTFa
                Fw0yMTA1MTMxMjMzMzFaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQ2ub
                GOKIYuhPr+NLmKSRCKxX//CIZV7cBvn8kkwsPExWF06pFFzspjGMCah/13jeqgyE
                ai6QUUEHRPQptt2rOqNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0cA
                MEQCIHLjxB+ecMIRN20HDvr0TeuLhNFUpI+f/HuR8cARiffVAiAk5gHIGMlBo2aj
                eiU+TQ7k6W0Mc4OFao2MR9XDBNCNMA==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-proxy-injector
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - name: tls
          secret:
            secretName: linkerd-proxy-injector-tls
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
    - name: proxy-injector
      port: 443
      targetPort: proxy-injector

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: sp-validator
  ports:
    - name: sp-validator
      port: 443
      targetPort: sp-validator

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: sp-validator
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-sp-validator
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: sp-validator
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: sp-validator
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-sp-validator
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - sp-validator
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9997
            initialDelaySeconds: 10
          name: sp-validator
          ports:
            - containerPort: 8443
              name: sp-validator
            - containerPort: 9997
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9997
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkjCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MTMxMjMzMTFa
                Fw0yMTA1MTMxMjMzMzFaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQ2ub
                GOKIYuhPr+NLmKSRCKxX//CIZV7cBvn8kkwsPExWF06pFFzspjGMCah/13jeqgyE
                ai6QUUEHRPQptt2rOqNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0cA
                MEQCIHLjxB+ecMIRN20HDvr0TeuLhNFUpI+f/HuR8cARiffVAiAk5gHIGMlBo2aj
                eiU+TQ7k6W0Mc4OFao2MR9XDBNCNMA==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-sp-validator
      volumes:
        - name: tls
          secret:
            secretName: linkerd-sp-validator-tls
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-tap
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: tap
  ports:
    - name: grpc
      port: 8088
      targetPort: 8088
    - name: apiserver
      port: 443
      targetPort: apiserver

---

kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: tap
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-tap
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: tap
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-tap
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: tap
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-tap
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - tap
            - -controller-namespace=linkerd-service
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9998
            initialDelaySeconds: 10
          name: tap
          ports:
            - containerPort: 8088
              name: grpc
            - containerPort: 8089
              name: apiserver
            - containerPort: 9998
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9998
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkjCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MTMxMjMzMTFa
                Fw0yMTA1MTMxMjMzMzFaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQ2ub
                GOKIYuhPr+NLmKSRCKxX//CIZV7cBvn8kkwsPExWF06pFFzspjGMCah/13jeqgyE
                ai6QUUEHRPQptt2rOqNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0cA
                MEQCIHLjxB+ecMIRN20HDvr0TeuLhNFUpI+f/HuR8cARiffVAiAk5gHIGMlBo2aj
                eiU+TQ7k6W0Mc4OFao2MR9XDBNCNMA==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-tap
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
        - name: tls
          secret:
            secretName: linkerd-tap-tls

---