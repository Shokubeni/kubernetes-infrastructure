---
###
### Linkerd Namespace
###
---
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd-service
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
---
###
### Identity Controller Service RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-identity
subjects:
  - kind: ServiceAccount
    name: linkerd-identity
    namespace: linkerd-service
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
---
###
### Controller RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["extensions", "apps"]
    resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list" , "get", "watch"]
  - apiGroups: [""]
    resources: ["pods", "endpoints", "services", "replicationcontrollers", "namespaces"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["split.smi-spec.io"]
    resources: ["trafficsplits"]
    verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-controller
subjects:
  - kind: ServiceAccount
    name: linkerd-controller
    namespace: linkerd-service
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-controller
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
---
###
### Destination Controller Service
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["pods", "endpoints", "services"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["split.smi-spec.io"]
    resources: ["trafficsplits"]
    verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-destination
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd-service
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
---
###
### Heartbeat RBAC
###
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd-service
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd-service
---
###
### Web RBAC
###
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["linkerd-config"]
  - apiGroups: [""]
    resources: ["namespaces", "configmaps"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["serviceaccounts", "pods"]
    verbs: ["list"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: Role
  name: linkerd-web
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-linkerd-service-web-check
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles", "clusterrolebindings"]
    verbs: ["list"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    verbs: ["list"]
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["list"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-linkerd-service-web-check
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-service-web-check
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-web-admin
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-tap-admin
subjects:
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
---
###
### Service Profile CRD
###
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: serviceprofiles.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
  labels:
    linkerd.io/control-plane-ns: linkerd-service
spec:
  group: linkerd.io
  versions:
    - name: v1alpha1
      served: true
      storage: false
    - name: v1alpha2
      served: true
      storage: true
  scope: Namespaced
  names:
    plural: serviceprofiles
    singular: serviceprofile
    kind: ServiceProfile
    shortNames:
      - sp
---
###
### TrafficSplit CRD
### Copied from https://github.com/deislabs/smi-sdk-go/blob/cea7e1e9372304bbb6c74a3f6ca788d9eaa9cc58/crds/split.yaml
###
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: trafficsplits.split.smi-spec.io
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
  labels:
    linkerd.io/control-plane-ns: linkerd-service
spec:
  group: split.smi-spec.io
  version: v1alpha1
  scope: Namespaced
  names:
    kind: TrafficSplit
    shortNames:
      - ts
    plural: trafficsplits
    singular: trafficsplit
  additionalPrinterColumns:
    - name: Service
      type: string
      description: The apex service of this split.
      JSONPath: .spec.service
---
###
### Prometheus RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-prometheus
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["nodes", "nodes/proxy", "pods"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-prometheus
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-prometheus
subjects:
  - kind: ServiceAccount
    name: linkerd-prometheus
    namespace: linkerd-service
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-prometheus
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
---
###
### Grafana RBAC
###
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-grafana
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service
---
###
### Proxy Injector RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: [""]
    resources: ["namespaces", "replicationcontrollers"]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
subjects:
  - kind: ServiceAccount
    name: linkerd-proxy-injector
    namespace: linkerd-service
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-service-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-tls
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
type: Opaque
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRRDhVd1EvbmQxVUh0bmJwTDRweXhhVEFOQmdrcWhraUc5dzBCQVFzRkFEQTEKTVRNd01RWURWUVFERXlwc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXRjMlZ5ZG1sagpaUzV6ZG1Nd0hoY05NakF3TXpFNU1Ua3lNVE13V2hjTk1qRXdNekU1TVRreU1UTXdXakExTVRNd01RWURWUVFECkV5cHNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF0YzJWeWRtbGpaUzV6ZG1Nd2dnRWkKTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESHk0M0g0VzBRY2JqS2paQWVaUllpamRvZwpKM1JxUU8zQlZCK2N0ODNMamZvWkxmaEJBV1J3eXhsUkdhWlhaeWRQZG1mQzRmdkV2enRjVmc2dEQrdGtHR1RICk9abU53b0RQQnlQUGU2dnhhdnpzSmxCK1pKKy9SZkk3dU1TZlFIVmFYQ1l4MTdOdm9WallkcjFJSzNURFJ0TlYKMlR2RG0veDlXNnZ4NEIrb0lSakNkYStsbmNLdXVTc2NqWkNjQTljeVFaT2tqak5nc2JlUFVtVzJ4ZXc4S3c5agpoZWNkOHRxT2c1LzVnWWNhczNPczNkUFB5bytXa01HM0VZZFp3OGhWYmRGRXhnOWczUmZWZDNqeE1MRk1mOEVBCkJhak4wMDJ3Uzl4YXh0RTdjekl4OThMUUhxVy9pendKdHBkZXF4d0tNMGwzeDhwTU5hSG5rV3kreTdZdEFnTUIKQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQgpCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVFIWjNnaGg0CndmQ0ZqblcxYUFxWTdOM2wvUU5JRHVyU1R2MWNHanhZd0VEWmwvN1hscndRcDk2R0lxUUJXRDc3Q01PM1dxVFoKOGVBQjZEbkcvZFIxTFF2S2x4T01LSnh5bEJrcUpPdHhSMDhVVXduYWxFdnRvNFQyWjNhVEdzUXhaOXpjZjU0cQprYVRlay9GV2ZEczE4dmx0ZFpJWEp6cFJIcXRBK1d5TlNtRldwZWlpMVB3Q1R5S09lZEU2UFJRcnVuWEd1VzBYCkM3YnFhNnJrYnFaTGlFMy9UNXFaTTQ4UTRJWnVwYmpJSGl4RkR6MWRGTmpRdWNoTUNMcEd6U2pwd05uZzhHbXAKK2UwK29kcnYyazJpeHhJaHB0VmVyUyswZkpld0NTamNONEh2OHNJNGUvaC83OTVOT1VaWVlHamQvYTJNYndTUgpucmxwL1lGNnQwbkJidz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeDh1TngrRnRFSEc0eW8yUUhtVVdJbzNhSUNkMGFrRHR3VlFmbkxmTnk0MzZHUzM0ClFRRmtjTXNaVVJtbVYyY25UM1pud3VIN3hMODdYRllPclEvclpCaGt4em1aamNLQXp3Y2p6M3VyOFdyODdDWlEKZm1TZnYwWHlPN2pFbjBCMVdsd21NZGV6YjZGWTJIYTlTQ3QwdzBiVFZkazd3NXY4ZlZ1cjhlQWZxQ0VZd25XdgpwWjNDcnJrckhJMlFuQVBYTWtHVHBJNHpZTEczajFKbHRzWHNQQ3NQWTRYbkhmTGFqb09mK1lHSEdyTnpyTjNUCno4cVBscERCdHhHSFdjUElWVzNSUk1ZUFlOMFgxWGQ0OFRDeFRIL0JBQVdvemROTnNFdmNXc2JSTzNNeU1mZkMKMEI2bHY0czhDYmFYWHFzY0NqTkpkOGZLVERXaDU1RnN2c3UyTFFJREFRQUJBb0lCQUFJbS9UWUVCYXJCcnQzdgp2SGUzV3crd080TlJLWDNqaVN3bC9ka3dXYlV4cUZvUkZyV01rRXB1eGEwTCs3REJXYmtQYTNxNytIeGNHd1daCm43clppdzJlL2FidnhlbXpDTFF5UFg2RXRJdDdQWkpGcjJSTkxUTmdTNFc5TGRFUlhySkVmOXpWbUFkQjA3VXgKUWtTK3d4ay9jQk5pcmJRandBcVJyRDZFelpLQUU5N0ZnRzdTT0xSOFVOVVBmU2FENnhnUTNBZGdkZEJVSlgzUQpGc05JaDBLa0s0T2tCYmZjUGFacUJDTDlMOUpjc1FzR1QvUFNnRVU4QUt1TVBqMGZPYXpHWUd1NTMvamR6VlJDCjc3YzRDSVlwczYvVHBXSVpBZ1JlQzEvQ1U0c2R2dHh1V0NaNzlpSGowWGgxRjRGeDgrWmloL3pLQktJL2FUVkIKL01mNmN2a0NnWUVBeWVtZXo2bVJrR1A5dUw3OWNaaUlkU3JjR2tUVldyeFBuZnJtbjVkTmRueHg0L25VcEJZNQp5eUxsaGplNHhENzZWZjA0Rk1yNWl3eUcycVFEdWZwMW12d20vNVhVVFptVkJuZ1V5cnpnVFFLVmRMZFcybHFzCk1sdkFNSzgxN3NidlZES0xTK1VVK29RR3ZjTzg0QlBDTDFNOGVVemNlMmdQK1NYdk5lN01HaXNDZ1lFQS9WQzYKSjZuY2dSVnI2N08vTHZkOXMwSW55L1pqa0k5ZDBGa2JFUXdsbHE5QUFMR29FUWgyaEtyVkJGeC84aWtpZk1xMgp6QVlhT3dhdEhDMk9QZ0tzS25LajhCcmswQU9PVjYvMm9kSEdzZEM1Q2J3N3lMMjFOUEJ4cUIySWIxazNBTDV4ClZJaGVTNDd2Vk5ZV3ZPWk5QZERxV1hxd3huUnl1cVRxdUtOUWZRY0NnWUVBeFpmWnNiRm80VnZwSlUzSzZzcngKNTIrOUcvdjJxeWdUNWk5dVdBbVNaZnljM0JSV1V3bnBIdkVVbXdlV3luNHpMOGx4ZzIrclM3ZERsVjNpdzdMbQpPbmkrbFdxRDdEajdUT3hndEpLb0V0VVBlN3didyszdURBNGNBOGpEUjl2b3hJWCtLWlNTdGlKVUVvc21JRWRWCnhraDNxdUZiOTJ5OERQOWhuRzhIMENjQ2dZQmhrZVdSLzNoQ2RCalVlYkNMQzZMc0YvQXlQSjRQQVZtMk5Zd2EKWGQ1Z2t2SUpFbVRVNHJpYjB4MG5oK1YwUmVuVnZWTDVkT1JIbGdPNWxjWnpGaDV3WHlYTUJ0L1pTM1ZaU3hxcApLNTdud0toMUduN0FqR211a1dxRndaSmFxVGRwWHZGU0NSQ2c4OVkxakJ6SDk4RUtyVnlHeUo0c1lwQUtXaGxhCnN2VCtvd0tCZ0hyZTE1YXpIRDRYSnZGS1pWbzdXMXNISDBITWlRVzlaTFdFSmxEd0tFZityVEMzVWVNd1hobFYKK1g3RmcwY0U5L1pvQ2NMR1RpOFpMNlNSVENIanZ6bVdZTkZ4ZS81ZlZoNGV1TVlKV3N6cUpTcU9HUjdLdTFOegprVUdUTDBGKzBJd1NtZlU0bnRjcUNCams3RmdLRXc5S0xuK3ZhWEliWlNPOE8wUERqQmcvCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
webhooks:
  - name: linkerd-proxy-injector.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-proxy-injector
        namespace: linkerd-service
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRRDhVd1EvbmQxVUh0bmJwTDRweXhhVEFOQmdrcWhraUc5dzBCQVFzRkFEQTEKTVRNd01RWURWUVFERXlwc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXRjMlZ5ZG1sagpaUzV6ZG1Nd0hoY05NakF3TXpFNU1Ua3lNVE13V2hjTk1qRXdNekU1TVRreU1UTXdXakExTVRNd01RWURWUVFECkV5cHNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF0YzJWeWRtbGpaUzV6ZG1Nd2dnRWkKTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESHk0M0g0VzBRY2JqS2paQWVaUllpamRvZwpKM1JxUU8zQlZCK2N0ODNMamZvWkxmaEJBV1J3eXhsUkdhWlhaeWRQZG1mQzRmdkV2enRjVmc2dEQrdGtHR1RICk9abU53b0RQQnlQUGU2dnhhdnpzSmxCK1pKKy9SZkk3dU1TZlFIVmFYQ1l4MTdOdm9WallkcjFJSzNURFJ0TlYKMlR2RG0veDlXNnZ4NEIrb0lSakNkYStsbmNLdXVTc2NqWkNjQTljeVFaT2tqak5nc2JlUFVtVzJ4ZXc4S3c5agpoZWNkOHRxT2c1LzVnWWNhczNPczNkUFB5bytXa01HM0VZZFp3OGhWYmRGRXhnOWczUmZWZDNqeE1MRk1mOEVBCkJhak4wMDJ3Uzl4YXh0RTdjekl4OThMUUhxVy9pendKdHBkZXF4d0tNMGwzeDhwTU5hSG5rV3kreTdZdEFnTUIKQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQgpCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVFIWjNnaGg0CndmQ0ZqblcxYUFxWTdOM2wvUU5JRHVyU1R2MWNHanhZd0VEWmwvN1hscndRcDk2R0lxUUJXRDc3Q01PM1dxVFoKOGVBQjZEbkcvZFIxTFF2S2x4T01LSnh5bEJrcUpPdHhSMDhVVXduYWxFdnRvNFQyWjNhVEdzUXhaOXpjZjU0cQprYVRlay9GV2ZEczE4dmx0ZFpJWEp6cFJIcXRBK1d5TlNtRldwZWlpMVB3Q1R5S09lZEU2UFJRcnVuWEd1VzBYCkM3YnFhNnJrYnFaTGlFMy9UNXFaTTQ4UTRJWnVwYmpJSGl4RkR6MWRGTmpRdWNoTUNMcEd6U2pwd05uZzhHbXAKK2UwK29kcnYyazJpeHhJaHB0VmVyUyswZkpld0NTamNONEh2OHNJNGUvaC83OTVOT1VaWVlHamQvYTJNYndTUgpucmxwL1lGNnQwbkJidz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    failurePolicy: Ignore
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    sideEffects: None
---
###
### Service Profile Validator RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
subjects:
  - kind: ServiceAccount
    name: linkerd-sp-validator
    namespace: linkerd-service
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-service-sp-validator
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-tls
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
type: Opaque
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lRUk1HQVVuOW1XZklOQkEwcEoxMWs0akFOQmdrcWhraUc5dzBCQVFzRkFEQXoKTVRFd0x3WURWUVFERXloc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xYTmxjblpwWTJVdQpjM1pqTUI0WERUSXdNRE14T1RFNU1qRXpNRm9YRFRJeE1ETXhPVEU1TWpFek1Gb3dNekV4TUM4R0ExVUVBeE1vCmJHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDMXpaWEoyYVdObExuTjJZekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnQyekNVWDFYcXljTWljbXNOTnRscThKek1PeStSMApUczdrSy9CcXFvajVqWnBvVGoyRUFwVWtacW1TakFaT2tjaWRLcCtDaUI0YW5POC9KMUlad2J4MUNrQVh4Tm9QCkpQK0F5S3EwL3prdVZCb1VTcHgvR0lqSWFMZVRqZnlTYlFJKzY4UE1vUXJuay9RczlmeEpMenB3NzRyN1lOMW0KRTRqL3JDWFUzZ3kvZHFlUWRYOXFiWXYzUHRpaTdTQkxXeHVBSS91dmNhQmFwdTEvRVRUNGZkUURNR3pwVHIzRQo5cTlHKzhrRHhWTVY5NWYrODVZL0dnaURBQzcwejJRNGZSWGd6WEZ2QzNRWklUY0hTbjRrUmZ1SnF1ZUpaMmpMCk1jQlEyajJRRE5VVCttbG5PaHZHSnFQeTZkTGdTdTZXVVVaQ3pwaHQwa0RSRWtudmlTZVM5S3NDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNCaHhEMG9YRXFBQTRSCjdMei9lbmxUWG5aUkFhYXh2d0x5YmZoUE5BVk56Ym9tT2hoU1Vnc1ZzTGxXdjJLVjNaQ0dFL0hNUWpkcUd1ZDMKUmhXZ2xuck1qVGt2KzFrb21iWGtPdndqWDhJWjU5R3ZHUXVIR1k3ZGp0eXgwTWQwUElVN2U1aFczRVRhalgwWApyQmR1bzZOQll1ZGl1UWR4d1FWOURHMWlFenR1MExlSk5LM1FHNHZkQ1hTTlhGRnVkZ0EwUUd2enliY0lhZVBECnNjZ0UzeHZvMUVnb3JnWnZjWHN4SzNZblE1SnNVN0dxc2M4Y1owL1RoSmswZWMyODRIMVBQZzQrbmpJNisrTWUKLzJvU2prRnVGZHd3ZjNtWUxENzYrd3U2YVhPS2tOdXFkWWNvdFBIc1hTRy9KTXBZblNEb2NQVGNkVW9aVlNXZgpxOXV2T2RiaQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMjNiTUpSZlZlckp3eUp5YXcwMjJXcnduTXc3TDVIUk96dVFyOEdxcWlQbU5tbWhPClBZUUNsU1JtcVpLTUJrNlJ5SjBxbjRLSUhocWM3ejhuVWhuQnZIVUtRQmZFMmc4ay80RElxclQvT1M1VUdoUksKbkg4WWlNaG90NU9OL0pKdEFqN3J3OHloQ3VlVDlDejEvRWt2T25Edml2dGczV1lUaVArc0pkVGVETDkycDVCMQpmMnB0aS9jKzJLTHRJRXRiRzRBais2OXhvRnFtN1g4Uk5QaDkxQU13Yk9sT3ZjVDJyMGI3eVFQRlV4WDNsLzd6CmxqOGFDSU1BTHZUUFpEaDlGZUROY1c4TGRCa2hOd2RLZmlSRis0bXE1NGxuYU1zeHdGRGFQWkFNMVJQNmFXYzYKRzhZbW8vTHAwdUJLN3BaUlJrTE9tRzNTUU5FU1NlK0pKNUwwcXdJREFRQUJBb0lCQVFDeUhoclZ5Q0JGTXVvQwpoOGU3MXlpM1A1bjVBSHRPOFc2OHo4Y3htd0RKcHZEY2J1ZUJXZERXeHZKamtrTC9JMm1DanJ4M05YUFFLdjFQCjE4dk1BSWVTc3RNYzdhMmc1VVc3OFFQc09IWWtMSXVwbHVwdlZWL09OQWw1Wk5LS09UVXI2M0ZpT29SQjIyM2oKY1ZJNzdoSGN0cWhUL20zQmd3VTczWFlVUmszcHZVSnJlbkZ2NGd5eDdlanVBdXJ2VXo2Rjd1cFI0STR0b2FodAozd0Z4T3RvUTYwN1FzR05lRVhIQ3FKbjhTU1Q1Q2lvZnhhL210dFRwYzZKRUNZOVJ5d0hQb1RieTExTmlqZTZjClFNZXllOTBDcmxsdmRiWmJ1UmgwQ0twYkRRM0M0OXk0Ulh4Zm5lWERvL3Rma3lycG50bC83aVU3QVhqV3lWOHgKYjFHMG1XQVJBb0dCQVBMdkdOOEpNSUsvQi9GbXY4MFdNcmFTSllvK0FLK3RGRzZXVGQzR2psM1J0MVNNRHh0bApCNm5ScVEzTldkbTN3TDY5WVRiSjZrWUQyeFI3L1BZeC9ENmViYkF5TGtRSXR2ZXZ2MFhWUCtOaDF1UDlUYUZmCnhMNE56dFVlYm9XaWR6dEhXSGx0bE9wZUEydnhScjR3NmxsV2NKREZoaXRZNlhFK3VWdTRjK0IvQW9HQkFPZEUKakZzZ1d6aE1hcmltQ0FIR1IvbE9UOEJBRDVNSWJGR29yWXFqK3lsUmUxTkppWnBYVytxSmRNa2FJa0hFWE0wNgpPS0VCb0ZOZ2I1eFlVbnFrK1dBQUJEMmVYV3lxMXlpNER2d3p2MVp1UUJDaGZEcXhvbktyNktZdTJsVE9lZWNnCnZPYVozdTEzNmd4WW8reVNnRGtoQ2orMGVXRDJpM09zVmlzYTRWWFZBb0dCQU8rUWdVSlEyWm5Wc0l1Sis5TE8KOVN1OWEyK3NQUmtBNFlrOGg0VVFiUXh2NXc1bEgvQ3Y3S0syc3JOOXNnRlZoNm1STC9ETHBVOXVOZms1Vy9lYwp5MWNrL0o0b25oOVJTTDF3Zm5yckZKbXl2aXNPZkNPTFFZVDZNT0ZScFVQN053RXFGa0dJb3JXTUNHdkYvekZICkk1TDkvdnVGRGc1cEc2d2xZcnprWk1FWkFvR0FWemZXNXhjUXorNmg0UGxjMDY1L3ZsbjJZYjdISU9Cd1dXdVAKNTFWb2gzQ2ZYZzNCdzE5bTN0RHdKbGVneThUT2F1ZW1LN0o5VUhSeUl6aDhBcHp0SDNOaUpncnZtT2ZsTlFvVgpQTEFYWFBVL1hBWkszNmZXYUFERlFNY3l1QUVXb0VBTWZidFNBNlRSczg1S0pCSXNJVitBaWYzNk9NTkNYR0dHCkxjTjViL0VDZ1lFQXlTdzRuNDU5U0h5djJld013SHJ2Wi9qNWovSCsweENZaXR1WW12eHZ1Ym91WHFKSlhPckQKT2RMT2xMQnViQldnSG5ETWpJOGpXR3c0cDdIbEEyQW5qVWZsNzd5Vk9JRENLd1hzeis4TFd1MDNVWnYrZUN3cApVMmVwYkpvSVBMK2g4QWFsSGdVRGlJT0VlSldJeC9OMVZOcEZDcFVhTWhjeUdTbW5CaXZpL1YwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
webhooks:
  - name: linkerd-sp-validator.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-sp-validator
        namespace: linkerd-service
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lRUk1HQVVuOW1XZklOQkEwcEoxMWs0akFOQmdrcWhraUc5dzBCQVFzRkFEQXoKTVRFd0x3WURWUVFERXloc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xYTmxjblpwWTJVdQpjM1pqTUI0WERUSXdNRE14T1RFNU1qRXpNRm9YRFRJeE1ETXhPVEU1TWpFek1Gb3dNekV4TUM4R0ExVUVBeE1vCmJHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDMXpaWEoyYVdObExuTjJZekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnQyekNVWDFYcXljTWljbXNOTnRscThKek1PeStSMApUczdrSy9CcXFvajVqWnBvVGoyRUFwVWtacW1TakFaT2tjaWRLcCtDaUI0YW5POC9KMUlad2J4MUNrQVh4Tm9QCkpQK0F5S3EwL3prdVZCb1VTcHgvR0lqSWFMZVRqZnlTYlFJKzY4UE1vUXJuay9RczlmeEpMenB3NzRyN1lOMW0KRTRqL3JDWFUzZ3kvZHFlUWRYOXFiWXYzUHRpaTdTQkxXeHVBSS91dmNhQmFwdTEvRVRUNGZkUURNR3pwVHIzRQo5cTlHKzhrRHhWTVY5NWYrODVZL0dnaURBQzcwejJRNGZSWGd6WEZ2QzNRWklUY0hTbjRrUmZ1SnF1ZUpaMmpMCk1jQlEyajJRRE5VVCttbG5PaHZHSnFQeTZkTGdTdTZXVVVaQ3pwaHQwa0RSRWtudmlTZVM5S3NDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUNCaHhEMG9YRXFBQTRSCjdMei9lbmxUWG5aUkFhYXh2d0x5YmZoUE5BVk56Ym9tT2hoU1Vnc1ZzTGxXdjJLVjNaQ0dFL0hNUWpkcUd1ZDMKUmhXZ2xuck1qVGt2KzFrb21iWGtPdndqWDhJWjU5R3ZHUXVIR1k3ZGp0eXgwTWQwUElVN2U1aFczRVRhalgwWApyQmR1bzZOQll1ZGl1UWR4d1FWOURHMWlFenR1MExlSk5LM1FHNHZkQ1hTTlhGRnVkZ0EwUUd2enliY0lhZVBECnNjZ0UzeHZvMUVnb3JnWnZjWHN4SzNZblE1SnNVN0dxc2M4Y1owL1RoSmswZWMyODRIMVBQZzQrbmpJNisrTWUKLzJvU2prRnVGZHd3ZjNtWUxENzYrd3U2YVhPS2tOdXFkWWNvdFBIc1hTRy9KTXBZblNEb2NQVGNkVW9aVlNXZgpxOXV2T2RiaQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    failurePolicy: Ignore
    rules:
      - operations: [ "CREATE" , "UPDATE" ]
        apiGroups: ["linkerd.io"]
        apiVersions: ["v1alpha1", "v1alpha2"]
        resources: ["serviceprofiles"]
    sideEffects: None
---
###
### Tap RBAC
###
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-tap
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "replicationcontrollers", "namespaces", "nodes"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list" , "get", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-tap-admin
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["tap.linkerd.io"]
    resources: ["*"]
    verbs: ["watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-tap
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-tap
subjects:
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-linkerd-service-tap-auth-delegator
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-tap
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-linkerd-service-tap-auth-reader
  namespace: kube-system
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-tap-tls
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
type: Opaque
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lSQUl6NGpNRE90cTRBQnBXWDF0QVB5TjB3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDMXpaWEoyYVdObExuTjJZekFlRncweQpNREF6TVRreE9USXhNamxhRncweU1UQXpNVGt4T1RJeE1qbGFNQ294S0RBbUJnTlZCQU1USDJ4cGJtdGxjbVF0CmRHRndMbXhwYm10bGNtUXRjMlZ5ZG1salpTNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUNndXE1U3poRnRIZlBsOEdwM2lOOCs2dnRsRWFQOXFZaWs1djFOcXgzT0F1Rm9KakVTRzNwVgpFMFo5VDkxajlPdjJTYnlRVzRwWUc3cDhSdmtPaWZ1eE5lV3U4Z2d5Z2hwTDNVMUthRW81WjRsdCtHYkg1MjFwCmEveERyZ294Y2wrNGo2emYrUEJMV2tZNnRKdmlpWUx4c2s1U0tmWk9MYjFtREk0SE9RaWgxTUdaSFZFakN6T0UKdTJ5NXhQOXE1cFBJamNrWTN1UzRlRGdaVnFvbytkNWxPaUZudFd3SkloL2g4bVlUK0RTZFc0MlYxa2c0dVZpdgoxbEtvNGkzU0tlZ2sxT08xeS9vRDhaVjhwdWNRckJjMG5TU216aGU0LzRja0xUQWRjanI2eUJZOGtqZjZxdTY0ClViQkVCa2RCdzd1cEtWZXg1eUZRK0tpMXUwUlFUSmgvQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTmRyamN6MjlXWFpKaHlDZ05OR0E0STRhZ1VJLzVhV3IwZHhjCkVxcCsydll0blFWemtSY2ZwdTYwa3pkbE5NWXFuNW44SU00SW12clVabmhFc0FWRzB3OVlScmlkR0szUTFqNWcKc3BIUjl6NmZ2OGUzRXdtT3llSGFSemlodCtJSEdRUXV5TFFFU0kxSHV3d2RMV2JCVVFmbHpMWk1pa1JLdXJWcgo1bEx1bG1HcEp0ZVgxQ2JnQ092TVVZajg4SllDdjQrZGd4NFVnMDltNm9JV3pVODE2Nm1Md1laWXk2ZmZQTk1ECk5ldDRQWW03VmpjQjNzRWtwbzllS0JHa0xPUzNoaWpvRWs1bENnc3VZTVRFdHcxYzFuU0czRkNwUjJ5MkY3SVUKOGR4S3BadnRVMG4vc0RSdnpmS0JGMkRka1lwcktNeEhKS013MzJvamcvYTUva2ZheEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb0xxdVVzNFJiUjN6NWZCcWQ0amZQdXI3WlJHai9hbUlwT2I5VGFzZHpnTGhhQ1l4CkVodDZWUk5HZlUvZFkvVHI5a204a0Z1S1dCdTZmRWI1RG9uN3NUWGxydklJTW9JYVM5MU5TbWhLT1dlSmJmaG0KeCtkdGFXdjhRNjRLTVhKZnVJK3MzL2p3UzFwR09yU2I0b21DOGJKT1VpbjJUaTI5Wmd5T0J6a0lvZFRCbVIxUgpJd3N6aEx0c3VjVC9hdWFUeUkzSkdON2t1SGc0R1ZhcUtQbmVaVG9oWjdWc0NTSWY0ZkptRS9nMG5WdU5sZFpJCk9MbFlyOVpTcU9JdDBpbm9KTlRqdGN2NkEvR1ZmS2JuRUt3WE5KMGtwczRYdVArSEpDMHdIWEk2K3NnV1BKSTMKK3FydXVGR3dSQVpIUWNPN3FTbFhzZWNoVVBpb3RidEVVRXlZZndJREFRQUJBb0lCQUcwYXE5REx6eXA1NWFFVgpsTC8xcWsxa1p5aFJWRGVSaUk4ZnVaeXFabjM4bUpRQk1OZ3d6TmJKVWRVb2pJa1lyY0F1aDVDYWd3dVNMd0hECmo3YmQxWHVTc1lvVEE1dDlrMm9pSENCQk1QbE1uZzZIU3dXeHhDU0d4K1FOVlNBQm1wYUcrUHZFV1NGZGMwVFEKYXV6WkdZa0YxNEtRdDRDVUxmZ0MxN3B4YmJtanhpYU9hVDlTZTZSNWk2UXBkT1MwRHJlbGU0UTgxZmFCRTIwegpUU1RVVEN4T3BvRExLKzFnOWZ6ellXUEE5c0d6NHZVcDJaSElDTWFIUTlPWmx2NkltRDNiZmdUTWs4aktMWmhOCjlwSW1POUdjcmpBcS9ZQlVXajU5QlRqYUdySEpVcEp2MlIvcTYzeGRQVDV4SHlrRXlrQnNQSWVJVEJRZ1UyNGQKTGtobWYvRUNnWUVBeDcwMisvd2lSSllrODdmNXl0blIranNtRkdIdlJHT2g5QnIzWWZJeWV2MDJCWXhnVE9WWgpSSkNVdjhJYVlDN0tacGdad1YwVlhNQ3ROZVVrRnUwa2pCRlVyT1l4QWkxMFV4ZmFKQ2twcVg2bUFmQXlYYXVlCklPRk93Slk5a0dycUVXZTBSRndqelhPVXNrOC8rVzI0UFZnQUNidlRjMGJNUkM1R1p5Z25taGNDZ1lFQXpnQ0sKaFZkMDBjWXpvZ1ZjYWZCT1dYWG5FYkVHTHNnbXBvVTY4TVNiYytnZUppTXlTcFBIZE0xV280VzMyOWNBWlBHVwovZVhBNURkN21GMjRBbCtXazFWOU5nSm9odExFTDk0RlRrRWhpOUE4elBSOFBYYzVRTG0vMXpnUzZFTWpCTmF4CnkxRHZIZlZDUWJxR2krc2U1V0QwWVhuZUFSTVlwczZMUUpqSXZka0NnWUVBakl5VXVGUC9PUXYrREpHVThDeSsKR0xxdVhRRmRBRjZyZzczRi9lSVRxMytxRjlWam5qaDB6RTZBblQ3VW1JSFVZc1Q4dXBmcGhFOEFrMEFlV1JPZAorQUhwOTVBelJEai85Y2grODVzVGVmVm9rMHlWNUZ2eTlXZ1ZwbWNTQXlGNGU2N2hwb2kvbUw2UUQ3aThaNlBSClZUa3JMYTVCYUlpVkRCVVQ3VnJRSXhrQ2dZQjl0b0xTSUs3Zm5XN0EvemlJUmVmcVhETW83cmp4TDUrMm16TisKM3R4bS9VMzR4QjNhdVJoTlJVb0wvSHhaSW5uUklFV2VwK2p3M0pNR1Jwc1doN0xpTXBkNHNEdU5tMjJ5TUhGWQpjaExBdWRHQTJlby9zRlEyRmFUbStBZEJ5a2JDbXlwaEF3RUpiVFNEM0FwanRKWmtNS2l5RzZiSlRSZ01JNXVEClRqbWk4UUtCZ0N0UnQveEVVQldKbVc0K2p4NFFya1ZjSjQ5V1ROMEZlVGkzOUVOQkl1MTFiNGgvN1lpU1EyRU8Kdys5RlNjZEd1anJxVG1EK29hNmV0NTJRd3BPS0pyUUx0S3g3M3lRL1VyQUlqZUpFTHp2cHhFVXE4aXpEQWxxKwpvaXFkU1dkbmpCcXRFcEt6NHB0eXNWRzcxTFIvN3Yzc0kwckhwZkNKaERRazVLbUdOMWpBCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.tap.linkerd.io
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
spec:
  group: tap.linkerd.io
  version: v1alpha1
  groupPriorityMinimum: 1000
  versionPriority: 100
  service:
    name: linkerd-tap
    namespace: linkerd-service
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lSQUl6NGpNRE90cTRBQnBXWDF0QVB5TjB3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDMXpaWEoyYVdObExuTjJZekFlRncweQpNREF6TVRreE9USXhNamxhRncweU1UQXpNVGt4T1RJeE1qbGFNQ294S0RBbUJnTlZCQU1USDJ4cGJtdGxjbVF0CmRHRndMbXhwYm10bGNtUXRjMlZ5ZG1salpTNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUNndXE1U3poRnRIZlBsOEdwM2lOOCs2dnRsRWFQOXFZaWs1djFOcXgzT0F1Rm9KakVTRzNwVgpFMFo5VDkxajlPdjJTYnlRVzRwWUc3cDhSdmtPaWZ1eE5lV3U4Z2d5Z2hwTDNVMUthRW81WjRsdCtHYkg1MjFwCmEveERyZ294Y2wrNGo2emYrUEJMV2tZNnRKdmlpWUx4c2s1U0tmWk9MYjFtREk0SE9RaWgxTUdaSFZFakN6T0UKdTJ5NXhQOXE1cFBJamNrWTN1UzRlRGdaVnFvbytkNWxPaUZudFd3SkloL2g4bVlUK0RTZFc0MlYxa2c0dVZpdgoxbEtvNGkzU0tlZ2sxT08xeS9vRDhaVjhwdWNRckJjMG5TU216aGU0LzRja0xUQWRjanI2eUJZOGtqZjZxdTY0ClViQkVCa2RCdzd1cEtWZXg1eUZRK0tpMXUwUlFUSmgvQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTmRyamN6MjlXWFpKaHlDZ05OR0E0STRhZ1VJLzVhV3IwZHhjCkVxcCsydll0blFWemtSY2ZwdTYwa3pkbE5NWXFuNW44SU00SW12clVabmhFc0FWRzB3OVlScmlkR0szUTFqNWcKc3BIUjl6NmZ2OGUzRXdtT3llSGFSemlodCtJSEdRUXV5TFFFU0kxSHV3d2RMV2JCVVFmbHpMWk1pa1JLdXJWcgo1bEx1bG1HcEp0ZVgxQ2JnQ092TVVZajg4SllDdjQrZGd4NFVnMDltNm9JV3pVODE2Nm1Md1laWXk2ZmZQTk1ECk5ldDRQWW03VmpjQjNzRWtwbzllS0JHa0xPUzNoaWpvRWs1bENnc3VZTVRFdHcxYzFuU0czRkNwUjJ5MkY3SVUKOGR4S3BadnRVMG4vc0RSdnpmS0JGMkRka1lwcktNeEhKS013MzJvamcvYTUva2ZheEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
###
### Control Plane PSP
###
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: linkerd-linkerd-service-control-plane
  labels:
    linkerd.io/control-plane-ns: linkerd-service
spec:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  allowedCapabilities:
    - NET_ADMIN
    - NET_RAW
  requiredDropCapabilities:
    - ALL
  hostNetwork: false
  hostIPC: false
  hostPID: false
  seLinux:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  volumes:
    - configMap
    - emptyDir
    - secret
    - projected
    - downwardAPI
    - persistentVolumeClaim
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-psp
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ['policy', 'extensions']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames:
      - linkerd-linkerd-service-control-plane
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-psp
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: Role
  name: linkerd-psp
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-controller
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-grafana
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-identity
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-prometheus
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-proxy-injector
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-sp-validator
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
data:
  global: |
    {"linkerdNamespace":"linkerd-service","cniEnabled":false,"version":"stable-2.7.0","identityContext":{"trustDomain":"cluster.local","trustAnchorsPem":"-----BEGIN CERTIFICATE-----\nMIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0\neS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDAzMTkxOTIxMTla\nFw0yMTAzMTkxOTIxMzlaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy\ndmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+8Sd\n1lkuftYRGuW2FVeeJ7olOODOBaKGkshT/JwDg7KcEk3mI3WMUfqcFuerj96RnCKR\nYxQIbth4Ngwf18GLQaNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG\nAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA\nMEUCIBIofD/WoP+jhfPXQYAEsLC7aaFw8qZuvSorVJrHfEb4AiEA2Y/0PRZUhuHS\ne2u0R75d2tiAyI3NxMAwx2aUYB7tRm8=\n-----END CERTIFICATE-----\n","issuanceLifetime":"86400s","clockSkewAllowance":"20s","scheme":"linkerd.io/tls"},"autoInjectContext":null,"omitWebhookSideEffects":false,"clusterDomain":"cluster.local"}
  proxy: |
    {"proxyImage":{"imageName":"gcr.io/linkerd-io/proxy","pullPolicy":"IfNotPresent"},"proxyInitImage":{"imageName":"gcr.io/linkerd-io/proxy-init","pullPolicy":"IfNotPresent"},"controlPort":{"port":4190},"ignoreInboundPorts":[],"ignoreOutboundPorts":[],"inboundPort":{"port":4143},"adminPort":{"port":4191},"outboundPort":{"port":4140},"resource":{"requestCpu":"","requestMemory":"","limitCpu":"","limitMemory":""},"proxyUid":"2102","logLevel":{"level":"warn,linkerd=info"},"disableExternalProfiles":true,"proxyVersion":"stable-2.7.0","proxyInitImageVersion":"v1.3.1","debugImage":{"imageName":"gcr.io/linkerd-io/debug","pullPolicy":"IfNotPresent"},"debugImageVersion":"stable-2.7.0"}
  install: |
    {"cliVersion":"stable-2.7.0","flags":[]}
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
    linkerd.io/identity-issuer-expiry: 2021-03-19T19:21:39Z
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJrekNDQVRtZ0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQXhNUzh3TFFZRFZRUURFeVpwWkdWdWRHbDAKZVM1c2FXNXJaWEprTFhObGNuWnBZMlV1WTJ4MWMzUmxjaTVzYjJOaGJEQWVGdzB5TURBek1Ua3hPVEl4TVRsYQpGdzB5TVRBek1Ua3hPVEl4TXpsYU1ERXhMekF0QmdOVkJBTVRKbWxrWlc1MGFYUjVMbXhwYm10bGNtUXRjMlZ5CmRtbGpaUzVqYkhWemRHVnlMbXh2WTJGc01Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRSs4U2QKMWxrdWZ0WVJHdVcyRlZlZUo3b2xPT0RPQmFLR2tzaFQvSndEZzdLY0VrM21JM1dNVWZxY0Z1ZXJqOTZSbkNLUgpZeFFJYnRoNE5nd2YxOEdMUWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUFvR0NDcUdTTTQ5QkFNQ0EwZ0EKTUVVQ0lCSW9mRC9Xb1AramhmUFhRWUFFc0xDN2FhRnc4cVp1dlNvclZKckhmRWI0QWlFQTJZLzBQUlpVaHVIUwplMnUwUjc1ZDJ0aUF5STNOeE1Bd3gyYVVZQjd0Um04PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVB5Y25VaWJmcUZvUDhiOFZqQzV3VHptblFHczBNcVFNdjNaVmc3RFl5Y0xvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFKzhTZDFsa3VmdFlSR3VXMkZWZWVKN29sT09ET0JhS0drc2hUL0p3RGc3S2NFazNtSTNXTQpVZnFjRnVlcmo5NlJuQ0tSWXhRSWJ0aDROZ3dmMThHTFFRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.0
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-identity
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-identity
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.0
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.0
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - identity
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9990
            initialDelaySeconds: 10
          name: identity
          ports:
            - containerPort: 8080
              name: grpc
            - containerPort: 9990
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9990
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
            - mountPath: /var/run/linkerd/identity/issuer
              name: identity-issuer
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDAzMTkxOTIxMTla
                Fw0yMTAzMTkxOTIxMzlaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+8Sd
                1lkuftYRGuW2FVeeJ7olOODOBaKGkshT/JwDg7KcEk3mI3WMUfqcFuerj96RnCKR
                YxQIbth4Ngwf18GLQaNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIBIofD/WoP+jhfPXQYAEsLC7aaFw8qZuvSorVJrHfEb4AiEA2Y/0PRZUhuHS
                e2u0R75d2tiAyI3NxMAwx2aUYB7tRm8=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: localhost.:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-identity
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - name: identity-issuer
          secret:
            secretName: linkerd-identity-issuer
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Controller
###
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-controller-api
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: controller
  ports:
    - name: http
      port: 8085
      targetPort: 8085
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
  labels:
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.0
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-controller
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: controller
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-controller
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.0
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.0
      labels:
        linkerd.io/control-plane-component: controller
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-controller
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - public-api
            - -prometheus-url=http://linkerd-prometheus.linkerd-service.svc.cluster.local:9090
            - -destination-addr=linkerd-dst.linkerd-service.svc.cluster.local:8086
            - -controller-namespace=linkerd-service
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9995
            initialDelaySeconds: 10
          name: public-api
          ports:
            - containerPort: 8085
              name: http
            - containerPort: 9995
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9995
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDAzMTkxOTIxMTla
                Fw0yMTAzMTkxOTIxMzlaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+8Sd
                1lkuftYRGuW2FVeeJ7olOODOBaKGkshT/JwDg7KcEk3mI3WMUfqcFuerj96RnCKR
                YxQIbth4Ngwf18GLQaNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIBIofD/WoP+jhfPXQYAEsLC7aaFw8qZuvSorVJrHfEb4AiEA2Y/0PRZUhuHS
                e2u0R75d2tiAyI3NxMAwx2aUYB7tRm8=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-controller
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: grpc
      port: 8086
      targetPort: 8086
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.0
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-destination
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-destination
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.0
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.0
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - destination
            - -addr=:8086
            - -controller-namespace=linkerd-service
            - -enable-h2-upgrade=true
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9996
            initialDelaySeconds: 10
          name: destination
          ports:
            - containerPort: 8086
              name: grpc
            - containerPort: 9996
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9996
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: localhost.:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDAzMTkxOTIxMTla
                Fw0yMTAzMTkxOTIxMzlaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+8Sd
                1lkuftYRGuW2FVeeJ7olOODOBaKGkshT/JwDg7KcEk3mI3WMUfqcFuerj96RnCKR
                YxQIbth4Ngwf18GLQaNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIBIofD/WoP+jhfPXQYAEsLC7aaFw8qZuvSorVJrHfEb4AiEA2Y/0PRZUhuHS
                e2u0R75d2tiAyI3NxMAwx2aUYB7tRm8=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-destination
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Heartbeat
###
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.0
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
spec:
  schedule: "31 19 * * * "
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.7.0
        spec:
          nodeSelector:
            beta.kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
            - name: heartbeat
              image: gcr.io/linkerd-io/controller:stable-2.7.0
              imagePullPolicy: IfNotPresent
              args:
                - "heartbeat"
                - "-prometheus-url=http://linkerd-prometheus.linkerd-service.svc.cluster.local:9090"
                - "-controller-namespace=linkerd-service"
                - "-log-level=info"
              securityContext:
                runAsUser: 2103
---
###
### Web
###
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: web
  ports:
    - name: http
      port: 8084
      targetPort: 8084
    - name: admin-http
      port: 9994
      targetPort: 9994
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
  labels:
    app.kubernetes.io/name: web
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.0
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-web
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: web
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-web
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.0
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.0
      labels:
        linkerd.io/control-plane-component: web
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-web
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - -api-addr=linkerd-controller-api.linkerd-service.svc.cluster.local:8085
            - -grafana-addr=linkerd-grafana.linkerd-service.svc.cluster.local:3000
            - -controller-namespace=linkerd-service
            - -log-level=info
            - -enforced-host=^(localhost|127\.0\.0\.1|linkerd-web\.linkerd-service\.svc\.cluster\.local|linkerd-web\.linkerd-service\.svc|\[::1\])(:\d+)?$
          image: gcr.io/linkerd-io/web:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9994
            initialDelaySeconds: 10
          name: web
          ports:
            - containerPort: 8084
              name: http
            - containerPort: 9994
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9994
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDAzMTkxOTIxMTla
                Fw0yMTAzMTkxOTIxMzlaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+8Sd
                1lkuftYRGuW2FVeeJ7olOODOBaKGkshT/JwDg7KcEk3mI3WMUfqcFuerj96RnCKR
                YxQIbth4Ngwf18GLQaNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIBIofD/WoP+jhfPXQYAEsLC7aaFw8qZuvSorVJrHfEb4AiEA2Y/0PRZUhuHS
                e2u0R75d2tiAyI3NxMAwx2aUYB7tRm8=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-web
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Prometheus
###
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-prometheus-config
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
data:
  prometheus.yml: |-
    global:
      scrape_interval: 10s
      scrape_timeout: 10s
      evaluation_interval: 10s

    rule_files:
    - /etc/prometheus/*_rules.yml

    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']

    - job_name: 'grafana'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd-service']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        action: keep
        regex: ^grafana$

    #  Required for: https://grafana.com/grafana/dashboards/315
    - job_name: 'kubernetes-nodes-cadvisor'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
      metric_relabel_configs:
      - source_labels: [__name__]
        regex: '(container|machine)_(cpu|memory|network|fs)_(.+)'
        action: keep
      - source_labels: [__name__]
        regex: 'container_memory_failures_total' # unneeded large metric
        action: drop

    - job_name: 'linkerd-controller'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd-service']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
        - __meta_kubernetes_pod_container_port_name
        action: keep
        regex: (.*);admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: component

    - job_name: 'linkerd-proxy'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        - __meta_kubernetes_pod_container_port_name
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns
        action: keep
        regex: ^linkerd-proxy;linkerd-admin;linkerd-service$
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
      # special case k8s' "job" label, to not interfere with prometheus' "job"
      # label
      # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =>
      # k8s_job=foo
      - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]
        action: replace
        target_label: k8s_job
      # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job
      # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =>
      # deployment=foo
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # drop all labels that we just made copies of in the previous labelmap
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # __meta_kubernetes_pod_label_linkerd_io_foo=bar =>
      # foo=bar
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_(.+)
      # Copy all pod labels to tmp labels
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: __tmp_pod_label_$1
      # Take `linkerd_io_` prefixed labels and copy them without the prefix
      - action: labelmap
        regex: __tmp_pod_label_linkerd_io_(.+)
        replacement:  __tmp_pod_label_$1
      # Drop the `linkerd_io_` originals
      - action: labeldrop
        regex: __tmp_pod_label_linkerd_io_(.+)
      # Copy tmp labels into real labels
      - action: labelmap
        regex: __tmp_pod_label_(.+)
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-prometheus
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: prometheus
  ports:
    - name: admin-http
      port: 9090
      targetPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.0
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-prometheus
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: prometheus
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-prometheus
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.0
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.0
      labels:
        linkerd.io/control-plane-component: prometheus
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-prometheus
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - --storage.tsdb.path=/data
            - --storage.tsdb.retention.time=6h
            - --config.file=/etc/prometheus/prometheus.yml
            - --log.level=info
          image: prom/prometheus:v2.15.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          name: prometheus
          ports:
            - containerPort: 9090
              name: admin-http
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            runAsUser: 65534
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /etc/prometheus
              name: prometheus-config
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_OUTBOUND_ROUTER_CAPACITY
              value: "10000"
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDAzMTkxOTIxMTla
                Fw0yMTAzMTkxOTIxMzlaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+8Sd
                1lkuftYRGuW2FVeeJ7olOODOBaKGkshT/JwDg7KcEk3mI3WMUfqcFuerj96RnCKR
                YxQIbth4Ngwf18GLQaNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIBIofD/WoP+jhfPXQYAEsLC7aaFw8qZuvSorVJrHfEb4AiEA2Y/0PRZUhuHS
                e2u0R75d2tiAyI3NxMAwx2aUYB7tRm8=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-prometheus
      volumes:
        - emptyDir: {}
          name: data
        - configMap:
            name: linkerd-prometheus-config
          name: prometheus-config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Grafana
###
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-grafana-config
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
data:
  grafana.ini: |-
    instance_name = linkerd-grafana

    [server]
    root_url = %(protocol)s://%(domain)s:/grafana/

    [auth]
    disable_login_form = true

    [auth.anonymous]
    enabled = true
    org_role = Editor

    [auth.basic]
    enabled = false

    [analytics]
    check_for_updates = false

    [panels]
    disable_sanitize_html = true

  datasources.yaml: |-
    apiVersion: 1
    datasources:
    - name: prometheus
      type: prometheus
      access: proxy
      orgId: 1
      url: http://linkerd-prometheus.linkerd-service.svc.cluster.local:9090
      isDefault: true
      jsonData:
        timeInterval: "5s"
      version: 1
      editable: true

  dashboards.yaml: |-
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: true
      editable: true
      options:
        path: /var/lib/grafana/dashboards
        homeDashboardId: linkerd-top-line
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-grafana
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: grafana
  ports:
    - name: http
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.0
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-grafana
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: grafana
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-grafana
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.0
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.0
      labels:
        linkerd.io/control-plane-component: grafana
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-grafana
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - env:
            - name: GF_PATHS_DATA
              value: /data
          image: gcr.io/linkerd-io/grafana:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
          name: grafana
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          securityContext:
            runAsUser: 472
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /etc/grafana
              name: grafana-config
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDAzMTkxOTIxMTla
                Fw0yMTAzMTkxOTIxMzlaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+8Sd
                1lkuftYRGuW2FVeeJ7olOODOBaKGkshT/JwDg7KcEk3mI3WMUfqcFuerj96RnCKR
                YxQIbth4Ngwf18GLQaNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIBIofD/WoP+jhfPXQYAEsLC7aaFw8qZuvSorVJrHfEb4AiEA2Y/0PRZUhuHS
                e2u0R75d2tiAyI3NxMAwx2aUYB7tRm8=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-grafana
      volumes:
        - emptyDir: {}
          name: data
        - configMap:
            items:
              - key: grafana.ini
                path: grafana.ini
              - key: datasources.yaml
                path: provisioning/datasources/datasources.yaml
              - key: dashboards.yaml
                path: provisioning/dashboards/dashboards.yaml
            name: linkerd-grafana-config
          name: grafana-config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Proxy Injector
###
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.0
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-proxy-injector
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.0
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.0
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - proxy-injector
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9995
            initialDelaySeconds: 10
          name: proxy-injector
          ports:
            - containerPort: 8443
              name: proxy-injector
            - containerPort: 9995
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9995
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDAzMTkxOTIxMTla
                Fw0yMTAzMTkxOTIxMzlaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+8Sd
                1lkuftYRGuW2FVeeJ7olOODOBaKGkshT/JwDg7KcEk3mI3WMUfqcFuerj96RnCKR
                YxQIbth4Ngwf18GLQaNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIBIofD/WoP+jhfPXQYAEsLC7aaFw8qZuvSorVJrHfEb4AiEA2Y/0PRZUhuHS
                e2u0R75d2tiAyI3NxMAwx2aUYB7tRm8=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-proxy-injector
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - name: tls
          secret:
            secretName: linkerd-proxy-injector-tls
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
    - name: proxy-injector
      port: 443
      targetPort: proxy-injector
---
###
### Service Profile Validator
###
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: sp-validator
  ports:
    - name: sp-validator
      port: 443
      targetPort: sp-validator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
  labels:
    app.kubernetes.io/name: sp-validator
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.0
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-sp-validator
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: sp-validator
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.0
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.0
      labels:
        linkerd.io/control-plane-component: sp-validator
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-sp-validator
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - sp-validator
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9997
            initialDelaySeconds: 10
          name: sp-validator
          ports:
            - containerPort: 8443
              name: sp-validator
            - containerPort: 9997
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9997
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDAzMTkxOTIxMTla
                Fw0yMTAzMTkxOTIxMzlaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+8Sd
                1lkuftYRGuW2FVeeJ7olOODOBaKGkshT/JwDg7KcEk3mI3WMUfqcFuerj96RnCKR
                YxQIbth4Ngwf18GLQaNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIBIofD/WoP+jhfPXQYAEsLC7aaFw8qZuvSorVJrHfEb4AiEA2Y/0PRZUhuHS
                e2u0R75d2tiAyI3NxMAwx2aUYB7tRm8=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-sp-validator
      volumes:
        - name: tls
          secret:
            secretName: linkerd-sp-validator-tls
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
---
###
### Tap
###
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-tap
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: tap
  ports:
    - name: grpc
      port: 8088
      targetPort: 8088
    - name: apiserver
      port: 443
      targetPort: apiserver
---
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.0
  labels:
    app.kubernetes.io/name: tap
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.0
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-tap
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: tap
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-tap
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.0
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.0
      labels:
        linkerd.io/control-plane-component: tap
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-tap
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - tap
            - -controller-namespace=linkerd-service
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9998
            initialDelaySeconds: 10
          name: tap
          ports:
            - containerPort: 8088
              name: grpc
            - containerPort: 8089
              name: apiserver
            - containerPort: 9998
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9998
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDAzMTkxOTIxMTla
                Fw0yMTAzMTkxOTIxMzlaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+8Sd
                1lkuftYRGuW2FVeeJ7olOODOBaKGkshT/JwDg7KcEk3mI3WMUfqcFuerj96RnCKR
                YxQIbth4Ngwf18GLQaNCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIBIofD/WoP+jhfPXQYAEsLC7aaFw8qZuvSorVJrHfEb4AiEA2Y/0PRZUhuHS
                e2u0R75d2tiAyI3NxMAwx2aUYB7tRm8=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.1
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-tap
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
        - name: tls
          secret:
            secretName: linkerd-tap-tls
