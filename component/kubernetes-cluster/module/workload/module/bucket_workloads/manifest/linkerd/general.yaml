---

kind: Namespace
apiVersion: v1
metadata:
  name: linkerd-service
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-identity
subjects:
  - kind: ServiceAccount
    name: linkerd-identity
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["extensions", "apps"]
    resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list" , "get", "watch"]
  - apiGroups: [""]
    resources: ["pods", "endpoints", "services", "replicationcontrollers", "namespaces"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["split.smi-spec.io"]
    resources: ["trafficsplits"]
    verbs: ["list", "get", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-controller
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-controller
subjects:
  - kind: ServiceAccount
    name: linkerd-controller
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-controller
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["pods", "endpoints", "services"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["split.smi-spec.io"]
    resources: ["trafficsplits"]
    verbs: ["list", "get", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-destination
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["linkerd-config"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd-service

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get"]
    resourceNames: ["linkerd-config"]
  - apiGroups: [""]
    resources: ["namespaces", "configmaps"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["serviceaccounts", "pods"]
    verbs: ["list"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: Role
  name: linkerd-web
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-linkerd-service-web-check
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles", "clusterrolebindings"]
    verbs: ["list"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list"]
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    verbs: ["list"]
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    verbs: ["list"]
  - apiGroups: ["linkerd.io"]
    resources: ["serviceprofiles"]
    verbs: ["list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-linkerd-service-web-check
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-service-web-check
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-web-admin
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-tap-admin
subjects:
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-prometheus
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["nodes", "nodes/proxy", "pods"]
    verbs: ["get", "list", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-prometheus
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-prometheus
subjects:
  - kind: ServiceAccount
    name: linkerd-prometheus
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-prometheus
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-grafana
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
  - apiGroups: [""]
    resources: ["namespaces", "replicationcontrollers"]
    verbs: ["list", "get", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list", "get", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
subjects:
  - kind: ServiceAccount
    name: linkerd-proxy-injector
    namespace: linkerd-service
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-service-proxy-injector
  apiGroup: rbac.authorization.k8s.io

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service

---

kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-tls
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
type: Opaque
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRUmJXbG5aS2prQks0MTJ1a09zYUNUekFOQmdrcWhraUc5dzBCQVFzRkFEQTEKTVRNd01RWURWUVFERXlwc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXRjMlZ5ZG1sagpaUzV6ZG1Nd0hoY05NakF3TlRBMU1qTTBNak16V2hjTk1qRXdOVEExTWpNME1qTXpXakExTVRNd01RWURWUVFECkV5cHNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF0YzJWeWRtbGpaUzV6ZG1Nd2dnRWkKTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFENnQyTUNPUzArbzl1djYyNmJ0YjBqOGxEWApiUmVnTDg5d0hyQ0YycjJjK3grK3A4ZmhjY0dSc3Rpem5MZVp3SWtPZGozdzNIRXBPazZVVjBjbUVSNFJLVGxFClp2bDVHc1hYVDBUOFVqWW5RWm15SDVWeUlqNXpsSlE2Nm1yazlBSUdjUG5nL2Z1cWxtVlZLMFQzK2hhY09LeFYKdzN4WmhYNFhHVlZqaFJheXJML21ncVFWZTF3c2FuN1VtODk3Qm5hazB3ZTZSOTZzQkFqMkJseTI1SUNHSFpHYwppZW5vZTdEQkdxRG1IRHdIS3AxdHBtSVVlMzdVOG52T3d4dEdaUzR1QTBzRnRBNGNXa3NKOENPdXFkb1UrWFBoCnBHYVJSbmNydENXZFNLRkdOVEJLWC9zVUQweEsrNGZMbG8xSXVBV0tFWDkvbTd2eVdMNUdDdnM0TW0xckFnTUIKQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQgpCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVF4QW1KQnJhCjc5V3F4Y1FKNXJyY0tPV3NxbitrRkxoRkdVRGdhajQ2RWVONm1LcG5kQVErS2dDNXBaYW9pM0FTc3U3NStPUmoKeHBwcVRRVVdEUThSaHpTK0didXNHQUdkNVQ5UzRTRXFrclFZRVJsMXYvVCtXdGJTRXNBOHBrVWQ0b2lHSGh5TQp3YVpPZERBdFQ3QTJ0TEFsUXBYNk5lTnhtM29peStBY0k1ZUtGSXdNN2F0Z3JWeWlDZjkyYkU5bTRVRlgxcTVUCnpqblVwNFMzdVB1bTh4MVdheTNoL1A2RTRXSDZubzJzdVJOaEV2RzhDZlZXaWJteDBPakpFQnc3bEYrY1NlZncKKzR3V0IvUEpjd2hkRkRCeXdJYnpYRTlUeUFmWCtHZ3V3Sjl1cUZsM0lqYUZreDkwNnFqZTI2cGNjME1ISEtIRwp5MUJ5Mys4aUdMYml5UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBK3JkakFqa3RQcVBicit0dW03VzlJL0pRMTIwWG9DL1BjQjZ3aGRxOW5Qc2Z2cWZICjRYSEJrYkxZczV5M21jQ0pEblk5OE54eEtUcE9sRmRISmhFZUVTazVSR2I1ZVJyRjEwOUUvRkkySjBHWnNoK1YKY2lJK2M1U1VPdXBxNVBRQ0JuRDU0UDM3cXBabFZTdEU5L29XbkRpc1ZjTjhXWVYrRnhsVlk0VVdzcXkvNW9LawpGWHRjTEdwKzFKdlBld1oycE5NSHVrZmVyQVFJOWdaY3R1U0FoaDJSbklucDZIdXd3UnFnNWh3OEJ5cWRiYVppCkZIdCsxUEo3enNNYlJtVXVMZ05MQmJRT0hGcExDZkFqcnFuYUZQbHo0YVJta1VaM0s3UWxuVWloUmpVd1NsLzcKRkE5TVN2dUh5NWFOU0xnRmloRi9mNXU3OGxpK1JncjdPREp0YXdJREFRQUJBb0lCQUV0UFp0ZzJJSmNlVlZGRQpvUmI0d25YWHhkelFFamExNWRQQ0JEaFErbi83RnhBSUNneDRSVExrekI4M3hoYlROTmc1UUdYbmNiNTJtMEFICjc0Rkp4d1JVbzdVZVVYWEZTd1JmOVZMdHh3S0h2QWs3WDRMSE1vYzViRVUrUVJuQkNoS3hRUDRLak53ekRRRkcKWEJNNDlpMjdBRmxLdlVHT3pjOVdkc1hNSm9OSXRLK01HdjY4U1FkNjBYY28vbmNmYjNqZ29DTW1wbjR0Vitzdwp5UVFKR2pyUENHWkZ0RUF6TTd2N09TRDJhR08xRjlBWSt0WkF2WHJDNWVKWVpjNDU2cENxdndQWEhVTmJPeWduCjBtL3c2NVZjd2dlZ1ZFMXdpWE91Z1ptN2JDY1l0NjZHTjUreWw5dGtsaUlkaGhmRTlJd3M2Nm9OMCtuRE45M2sKUXVUWTVhRUNnWUVBL3kxeTI4amNWUTFJdGs3UVdMekpNT29abWZsVHhkTFUrakxxbFBoSm9mTGpQaE4wM080NwpWcU5xRGF0TFBsb2FNMm4zcmNOMFhIa1AxMUE4MUdCYUlBNU1ENGdwR0x4UHdVd2NqdTB2R2VQSm55RGZUNTM4CklvWmo5TGJyMHBEUjE1TVhmay8vai9Dc1dsTjFrK2ZnR0ZDcnJKWmQyekU1aVhuTTJ6MDB0b01DZ1lFQSs0WkIKMEwyMi9BdU10NTRVb1ZFMnRlWTFnRk9hcjEremR2OGdhRFNORzRvdndFKzAzWFlwaEg2Qm5ackxDeDd2Y1JsagpteTBxK2lnU1lxMVBVY01ReXUvUlBxNktjektGS1NEbnpzODRZamhwcDg0OHpwSjU5MkNGa2NjYy9BakpGTDF5CnpRNEFGYU81bkNBbHB5WXVXU1RpVSt6K1Z3dXNUbWJPK3lvSytQa0NnWUVBMkZTbmN6eXR6azBjdjdIQlgvbHMKZDFOL3NORjIrOWJwUjlPeW0raUNSQkd1SlFwSm9LTTNHeFFlN01leldvRDRoVzNvMUI5SG5yM2plQjVGODZaYgp3YUZkU2kyYzZhTjcyZHUwdWxiSi82RGxaVXB4QndaZ29zUmNLVEtLYWxEc0ZWNVdKSGVkcVdIWVBCdFZLcmNCCmZKdW5id0ZyUUZCUy93R0xjckpJNWhFQ2dZRUE2V2ZkQzJnQnRrTEJnbU1mb2ROTGdlRHZKUFp3Uk8zNkRDTVUKWDU3a2t2blk5ZzBCT2NHOUpVWi80VkVUdW00cXBEbDdSVFRVL083U29OOVRDL3lJU01uaTB0Z0Znb0VQTU90bwpNWEg2VUtzbzRKOXhyZ0FmVG9BemN1UGk4YjcxV2xtemZyWFBQa1dBcUhEc2YvL2VZcnJuakJvUXE1WVpmMmZJCkN5c29vNEVDZ1lBZDdONU5uUVZUdGFEanpGM0YxVStrREdvanJ0Q3J0R1U5VDlUYUlSa0RLMklaZHBwVFkxOEsKOEZybjNPUnhCUkhpQVhkcVZnWmJPTm45aXV5cmU1Z3oySkFFdHZYb1FXSUQxaGgzTG1KK2xQcEh4S1JZSE13TgpGZHJyOFNOdCtaQkdtYXgzZ0lmdnZnSnY5VVg4NXpTc3VIR0ZzeldrcWYrWHBzUnp4b0c5Y3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
webhooks:
  - name: linkerd-proxy-injector.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-proxy-injector
        namespace: linkerd-service
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lRUmJXbG5aS2prQks0MTJ1a09zYUNUekFOQmdrcWhraUc5dzBCQVFzRkFEQTEKTVRNd01RWURWUVFERXlwc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXRjMlZ5ZG1sagpaUzV6ZG1Nd0hoY05NakF3TlRBMU1qTTBNak16V2hjTk1qRXdOVEExTWpNME1qTXpXakExTVRNd01RWURWUVFECkV5cHNhVzVyWlhKa0xYQnliM2g1TFdsdWFtVmpkRzl5TG14cGJtdGxjbVF0YzJWeWRtbGpaUzV6ZG1Nd2dnRWkKTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFENnQyTUNPUzArbzl1djYyNmJ0YjBqOGxEWApiUmVnTDg5d0hyQ0YycjJjK3grK3A4ZmhjY0dSc3Rpem5MZVp3SWtPZGozdzNIRXBPazZVVjBjbUVSNFJLVGxFClp2bDVHc1hYVDBUOFVqWW5RWm15SDVWeUlqNXpsSlE2Nm1yazlBSUdjUG5nL2Z1cWxtVlZLMFQzK2hhY09LeFYKdzN4WmhYNFhHVlZqaFJheXJML21ncVFWZTF3c2FuN1VtODk3Qm5hazB3ZTZSOTZzQkFqMkJseTI1SUNHSFpHYwppZW5vZTdEQkdxRG1IRHdIS3AxdHBtSVVlMzdVOG52T3d4dEdaUzR1QTBzRnRBNGNXa3NKOENPdXFkb1UrWFBoCnBHYVJSbmNydENXZFNLRkdOVEJLWC9zVUQweEsrNGZMbG8xSXVBV0tFWDkvbTd2eVdMNUdDdnM0TW0xckFnTUIKQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQgpCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVF4QW1KQnJhCjc5V3F4Y1FKNXJyY0tPV3NxbitrRkxoRkdVRGdhajQ2RWVONm1LcG5kQVErS2dDNXBaYW9pM0FTc3U3NStPUmoKeHBwcVRRVVdEUThSaHpTK0didXNHQUdkNVQ5UzRTRXFrclFZRVJsMXYvVCtXdGJTRXNBOHBrVWQ0b2lHSGh5TQp3YVpPZERBdFQ3QTJ0TEFsUXBYNk5lTnhtM29peStBY0k1ZUtGSXdNN2F0Z3JWeWlDZjkyYkU5bTRVRlgxcTVUCnpqblVwNFMzdVB1bTh4MVdheTNoL1A2RTRXSDZubzJzdVJOaEV2RzhDZlZXaWJteDBPakpFQnc3bEYrY1NlZncKKzR3V0IvUEpjd2hkRkRCeXdJYnpYRTlUeUFmWCtHZ3V3Sjl1cUZsM0lqYUZreDkwNnFqZTI2cGNjME1ISEtIRwp5MUJ5Mys4aUdMYml5UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    failurePolicy: Ignore
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    sideEffects: None

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-sp-validator
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
subjects:
  - kind: ServiceAccount
    name: linkerd-sp-validator
    namespace: linkerd-service
    apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-service-sp-validator
  apiGroup: rbac.authorization.k8s.io

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service

---

kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-tls
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
type: Opaque
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lRVCs0ZHdBT1pvK3ZBc3VKaHR1Mm1CakFOQmdrcWhraUc5dzBCQVFzRkFEQXoKTVRFd0x3WURWUVFERXloc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xYTmxjblpwWTJVdQpjM1pqTUI0WERUSXdNRFV3TlRJek5ESXpNMW9YRFRJeE1EVXdOVEl6TkRJek0xb3dNekV4TUM4R0ExVUVBeE1vCmJHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDMXpaWEoyYVdObExuTjJZekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT3FPeUZRN1ZxcXREejRPVWZKTlR4bytTQzdFUXRHSgpVcHprZzFhZXIwRGVLY29Dc3M0VXhHVCtCWmg0V1JCelNzSEt2S3lmWm0vT2k0Z1NtTVZ6RU9lS3FRVENKRjhCCllRWUZIbDhKUnB4eGJnaytVWVJHdFcvZWUrWnZwaFJGdW44SUV0V2RaZElLbWEzbzFMR2ZDUnFEaEFhWlc1aEsKMWJSWDA1TWRCRVpiSXNaQzd3dCtjcnhiOHpRc3c4Wk5uNmt2bWJGdENTbmdZU0p5dGZOVkNQeGRGek1lQVVMLwpIOXJlQkJCamZkaThUaysvUEZrNUNlOHRnc3Z0Z1FrNllUSi9KNUNMaE5tQkpyS0VPcFBjZE9wcVh5a2d6VzRyCmlLNTVPRU9zMG8yM0hSdmpQaXRESlRmZUlUUG9kbytGeFV5L3dwdWdILzZ1T3ErSHBjaVo3N01DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFLZmVsNG5wTmJPNE8vCi84cU03QlpINDk5NVFvbHd6cjNKa1RoNm9nR21YUUlYdWd2dmt3UHIrbVRDY3dYTzU4Wjk1OExYZVhpbUV2SFAKcDZNUHpZNWlHTHhuNFppNkY0azRkZS9mNVpEZzI0YXFxTWdlWXdxMHh2cTNTalh0ZDcwbXR2U0dLdnJUNW5IbQphalVHbnREcFZzNFZjY3ZvVUNqVHlUaE1hNm9WcXFvb3R5V0Z1RUNzZG5iY3VZZlNhYzVicnM3OHl6Q2QxR0ZCCnU1MjMyVHVOOTFyZmcrRTJJRG05YzZodkkzVjlXNFh5RnZPVEVoQzJySE9wVjYvOUM5a3lucTMxbk5lNUxLMVYKTDBiZytnTUd6R000S1BIblp6TTVISFcyTW5Cb3VmbXlMZlB0dVY2alVHbUJxemRFQmprZDdiYlpVc2FFczlEZApaSHhNWUVHSwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNm83SVZEdFdxcTBQUGc1UjhrMVBHajVJTHNSQzBZbFNuT1NEVnA2dlFONHB5Z0t5CnpoVEVaUDRGbUhoWkVITkt3Y3E4cko5bWI4NkxpQktZeFhNUTU0cXBCTUlrWHdGaEJnVWVYd2xHbkhGdUNUNVIKaEVhMWI5NTc1bSttRkVXNmZ3Z1MxWjFsMGdxWnJlalVzWjhKR29PRUJwbGJtRXJWdEZmVGt4MEVSbHNpeGtMdgpDMzV5dkZ2ek5DekR4azJmcVMrWnNXMEpLZUJoSW5LMTgxVUkvRjBYTXg0QlF2OGYydDRFRUdOOTJMeE9UNzg4CldUa0o3eTJDeSsyQkNUcGhNbjhua0l1RTJZRW1zb1E2azl4MDZtcGZLU0ROYml1SXJuazRRNnpTamJjZEcrTSsKSzBNbE45NGhNK2gyajRYRlRML0NtNkFmL3E0NnI0ZWx5Sm52c3dJREFRQUJBb0lCQVFDRTZRTjdOMlNVc2h2QQovanhSSUoyQ01XaVZsNENGVzFzRXJEZ0FEVXNoWnNJblJnQXI1bmlqQVk0S0o2ZlFPb1JSNjUrZDhYVUtSZStxCjIxN1dBNjNBaGtIZ0FHSzdzdnhYZk84SXl5akgzVDZNM2xNeXNSNStsWU4vd0NSTHVIZEZKRDRIN1hpVTNJelkKanVaMi83Y1kzdzBnOENXRzFtRGlJQ0l6YW0zUnJ4ekk5eDV2Mlpicld0djNzMXRNbkFob0hzOUsvbXVVMEZPcwpOai9qQWpxelIrMm9Xa29qYmYrd3o3S1c0M1lqQ05iYkN6L2hjbVZtNDFvdVA3TnhYaFV6TkQ4MDVvd3VQc2lEClAyMmpPRDJjeHpWdHArYW5vTS9Od2dnd3BQbVhYdFBLa1E3Tm5JUGN1blpxQW5LMTZBbSs0UDJYbmtzYUUrZGwKTHNqc3hlY0JBb0dCQVA3Yzdmblp3eTh1UlhyeUpydFVKT3ZVeGtENW90VzRYV1FJNGl1TEhmZlA4blllcm5EYgphVUhPaFpxT0tWR1ByNHM3NUZiRjdETmRhbEdHQ29CZFJ1ZjZFYkNpNnkzSUpIdXMzOWVGd20xNnA4cUJJdi9ICi84cklMSWNScEtOK3lmODNRekVXYkw5T3Y3R0o4VXpBTnI0ak5ZNEh3ZUM5VWcxbU9jcW9MNXhyQW9HQkFPdWEKcWJteUxDbGhaN1ZZVHVzM3BxQ2IvL1lucGFXd2FNb3FsNkJuR1BqQ2cxUlBuRlBkL1JXSk5NTSt5endEV1ZtMwpoWS9KY0w5MENEc3dUNFlEaEQraTZON2dJV0ZuR1FKZERacThxV2pubnJnSE1rWnRpWEY1TS9IUHFwVEhFSTQ0Cm8yZmRnQ0t0QkxjYkVjUi8waEJFN2d4NitDWHdoTjNQUmRFN0FVdlpBb0dCQU95YTJtdDhHTkl5V05xYytBd3QKUCtHWXRUMFpCR3o1TGVweXZOWEQzMXh5dHh1bHZEaVYyWS80Vk54NVlpNlFBRjU0aWJGdEthMDk2amdwQXBMTgpCY2pTeFoyQWdta01SNkp4aVpXaVhqQVpFTERWVmxLenIrcm9EejZOeUpUb1hrc0xXTnUzZjluVEYrK1FxbTJnCmZMSGtLaEhqYmNCZ3drNGlPMEREQndCbEFvR0FVdTNScUFkSy9CWEpCMC9hRjNrek1YMDNqMUZOUVJEakVhWUUKVVBWNUdMWit1NEo2S0JzUEpqRnhYUGdSV1VKa2hPdlFHMWh3VXpOb1lrMFM4THowSStJWHpidGVoSVpoaXk5dAp4blY1dSs4ck11TjFrc3lqZ0VtRk95dzVncnkrMnhDY2s4YW5mNDBmQjhTRGNJTDlVYlN4aGJzUzlXZS9uTU9FCmM2MHRPNkVDZ1lFQTdOQVhXb0kvTUFjamZsbkZkd0l4TkhMajE5a2puSnExVnZ2VkFSc0dRNWw3dFE0N3VKbGcKV1Vpb3hiaHBiZ1NmcFVkcGJWQlNFSyt3Q1UyT1pibURWTUlqWVRCVndMb1gyOWtVVjlDNE53aWc1Nm9zVnk3bApsL2dsRkJpTUpHUWdGdkJFRWpjbEVGNlJXNG9senpGdCtQR0NpWEh3Zll0U0tFQ2xZcGpsM1JjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---

apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
webhooks:
  - name: linkerd-sp-validator.linkerd.io
    namespaceSelector:
      matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
            - disabled
    clientConfig:
      service:
        name: linkerd-sp-validator
        namespace: linkerd-service
        path: "/"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lRVCs0ZHdBT1pvK3ZBc3VKaHR1Mm1CakFOQmdrcWhraUc5dzBCQVFzRkFEQXoKTVRFd0x3WURWUVFERXloc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xYTmxjblpwWTJVdQpjM1pqTUI0WERUSXdNRFV3TlRJek5ESXpNMW9YRFRJeE1EVXdOVEl6TkRJek0xb3dNekV4TUM4R0ExVUVBeE1vCmJHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDMXpaWEoyYVdObExuTjJZekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT3FPeUZRN1ZxcXREejRPVWZKTlR4bytTQzdFUXRHSgpVcHprZzFhZXIwRGVLY29Dc3M0VXhHVCtCWmg0V1JCelNzSEt2S3lmWm0vT2k0Z1NtTVZ6RU9lS3FRVENKRjhCCllRWUZIbDhKUnB4eGJnaytVWVJHdFcvZWUrWnZwaFJGdW44SUV0V2RaZElLbWEzbzFMR2ZDUnFEaEFhWlc1aEsKMWJSWDA1TWRCRVpiSXNaQzd3dCtjcnhiOHpRc3c4Wk5uNmt2bWJGdENTbmdZU0p5dGZOVkNQeGRGek1lQVVMLwpIOXJlQkJCamZkaThUaysvUEZrNUNlOHRnc3Z0Z1FrNllUSi9KNUNMaE5tQkpyS0VPcFBjZE9wcVh5a2d6VzRyCmlLNTVPRU9zMG8yM0hSdmpQaXRESlRmZUlUUG9kbytGeFV5L3dwdWdILzZ1T3ErSHBjaVo3N01DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFLZmVsNG5wTmJPNE8vCi84cU03QlpINDk5NVFvbHd6cjNKa1RoNm9nR21YUUlYdWd2dmt3UHIrbVRDY3dYTzU4Wjk1OExYZVhpbUV2SFAKcDZNUHpZNWlHTHhuNFppNkY0azRkZS9mNVpEZzI0YXFxTWdlWXdxMHh2cTNTalh0ZDcwbXR2U0dLdnJUNW5IbQphalVHbnREcFZzNFZjY3ZvVUNqVHlUaE1hNm9WcXFvb3R5V0Z1RUNzZG5iY3VZZlNhYzVicnM3OHl6Q2QxR0ZCCnU1MjMyVHVOOTFyZmcrRTJJRG05YzZodkkzVjlXNFh5RnZPVEVoQzJySE9wVjYvOUM5a3lucTMxbk5lNUxLMVYKTDBiZytnTUd6R000S1BIblp6TTVISFcyTW5Cb3VmbXlMZlB0dVY2alVHbUJxemRFQmprZDdiYlpVc2FFczlEZApaSHhNWUVHSwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    failurePolicy: Ignore
    rules:
      - operations: [ "CREATE" , "UPDATE" ]
        apiGroups: ["linkerd.io"]
        apiVersions: ["v1alpha1", "v1alpha2"]
        resources: ["serviceprofiles"]
    sideEffects: None

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-tap
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "replicationcontrollers", "namespaces", "nodes"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "apps"]
    resources: ["daemonsets", "deployments", "replicasets", "statefulsets"]
    verbs: ["list", "get", "watch"]
  - apiGroups: ["extensions", "batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["list" , "get", "watch"]

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-tap-admin
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ["tap.linkerd.io"]
    resources: ["*"]
    verbs: ["watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-service-tap
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-service-tap
subjects:
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-linkerd-service-tap-auth-delegator
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service

---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-tap
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-linkerd-service-tap-auth-reader
  namespace: kube-system
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service

---

kind: Secret
apiVersion: v1
metadata:
  name: linkerd-tap-tls
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
type: Opaque
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lSQVBnK0ZhS0d4WHRCSXk0U1NnOTllczB3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDMXpaWEoyYVdObExuTjJZekFlRncweQpNREExTURVeU16UXlNek5hRncweU1UQTFNRFV5TXpReU16TmFNQ294S0RBbUJnTlZCQU1USDJ4cGJtdGxjbVF0CmRHRndMbXhwYm10bGNtUXRjMlZ5ZG1salpTNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUNwRlBOdG9pdS9IemdWdzlWanlVWTNLeit5cmQ2bnlMbTl2R1VxdG1Jd2lBV2JZTy9PM3V0cApxaTJ0ZnRydDVVQXdQOTRrVUlBSkV0cGhzaUprRXc3amlaR0pFR0JoWmNtU3NGSjkrZzZHMWtYMzV6WVZqaXlDCnc4eU13em14dVdiaEQzV1UvcWxzdkpDWS9Hek55YW1SSlRiMTd4NGxUdFR6L3I2U0Y2aVJuTmJCbFBMSVRVWkEKSlI2R1J0R3FsRnpWYVVPTEsyQ2J2MnF3dzkydEFZZE9sVEF6Nnp4SytKZFQvc3MzM2duMm9PclIvemZGV1kvZgoyZjVUVWdKR0dLMy90NWYyelZDNG1TY1F4L0luSlFHUm1VNXJPUk5lZnc1b1N3RzFsQzg3dExWSFQ5cmdGT2oxCnRPRTN2R3J5NitMUWF4ZHlxVkxsOHM2Z21LRW5OdVFCQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbGQybHRpZXdVbm9ZTVJQS1VnSkNwTVFXRXBZbkkrZXZoYTI1CnRncmcvL2lwUmhweVVUaEw3ODdIaTdJVi9QcDhwWld0UkQwN1NZTmxuZndRWEJXZDVGeUVSdEIraDhQNVFYb1EKaVNJQXBZcDZoZUlidFhuNWVLZkU4dmtkOHdMN3FNOEJuMkZ4VlBtQTk1TGVWT3dVYm5wYTJMcEIyWFRMLy9tcAp5ZG9QVnp3UjZETHRodDJWbk8rQTgxQWdrV0k5TUpsQkJBK3NTdzFmMHgvemZnOVcrTEhvSVhVWnk0dXkrNTNSClVuMTcydnlNa0RIcm5Xa0VSTDJscXJYS21SSUhySjF1YVQyVVVpellyV0RuMEtyUkZ2WTZPY3BLL2tkOEpJSFUKUlRGKzBQOHpGVXBTMVk1d2hOamp6K29BbjVEWVdTUTBlb09UUXQ5N1JINnNRRUNpbWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVJUemJhSXJ2eDg0RmNQVlk4bEdOeXMvc3EzZXA4aTV2YnhsS3JaaU1JZ0ZtMkR2Cnp0N3JhYW90clg3YTdlVkFNRC9lSkZDQUNSTGFZYklpWkJNTzQ0bVJpUkJnWVdYSmtyQlNmZm9PaHRaRjkrYzIKRlk0c2dzUE1qTU01c2JsbTRROTFsUDZwYkx5UW1QeHN6Y21wa1NVMjllOGVKVTdVOC82K2toZW9rWnpXd1pUeQp5RTFHUUNVZWhrYlJxcFJjMVdsRGl5dGdtNzlxc01QZHJRR0hUcFV3TStzOFN2aVhVLzdMTjk0SjlxRHEwZjgzCnhWbVAzOW4rVTFJQ1JoaXQvN2VYOXMxUXVKa25FTWZ5SnlVQmtabE9hemtUWG44T2FFc0J0WlF2TzdTMVIwL2EKNEJUbzliVGhON3hxOHV2aTBHc1hjcWxTNWZMT29KaWhKemJrQVFJREFRQUJBb0lCQUZjQmpQSlJqU2xnSzBBbgo4ZHJUYStwZnV2dDdOU1FweWtxMGMycXpSM3Vwd3hqZG5RbGE5TkQrM1ZwMStMcUtTYW1LZEFsRDAxN1g4TUJ0CkpmMVJRVXdkTW1MUnBvYjRGZTRDQmJFRnlBdmluMGFlRjlxbnVvZmZzWmFOcjFhaERTdXJCTnFTNFNRdk5FbEYKTzhmNWllUkN2akYzeG85MExXa1JJWWVUM1E1d1MvT0dobFpVRzB6ak40SWpCMVlwUm13aU81dENoaHZhTS9hLwo4V2czK2lWeUNhWXIwcHhYWk53NjFTMlpJeXR6aEF2TW8xejFxb1VZMVJYWlBLSXo5QWtTVlhNckgwMUwyendqCk9FOUFCamhHT1JkOVdxcDF0OFk1bmNzUUVoOHFrem5CSUFSQkFMNVM0WDJpZEZtdzVBTTM4VzdzOHRqeDZveTUKTEhpYnYwRUNnWUVBMzdLUTd0Q1lvR0pJYkJOdDliK0hHOGU5cHJueWRtU2Q1Z0gyUFZDVHNYNjQ1NU9lbzdNOApYQ2hMTmhMcEwrWFVqa3k1RmcwR21YTmxOSjQvUDZ2cXphOWlWbm1JeGhiQStacFA0UVhySU9rQTJqYWczSG1MCllXUm5vQm9hSVFIK3dpK0NEK1Z6dVM3U0hnQ2VSMG9TaWRkMitzdjBsc2RBQ2VSZ08vUXdVSTBDZ1lFQXdYOW4KcUF5RVU0TDJrSFg4Vi9KVm8wVkszOW1XTHVHSU5oQVhNcEFvdFY5TW00VEhNMU84R2I0ZW9zWkxPMkRSV0U0ZwpvMnhuNnZTVlllY0JNTnZTYnM0TmpBV1pMWkFlUVFSdTNQblBsNG9iU0ZpOVhSL0xiU2pzQVNwcXZqakRvQ3FCCmFlVDQ1cXBKSHhmZm1yOGdlays4RGdZMnBrWVRKZWtwUzVhOVprVUNnWUVBMXBxLzBteUtVQ3VaNFIxT3U1bHcKSytXVysxR2UyNWd4cDB5d2lDZzZXT2tDeVIvazdKVnlUZE5XUEYwdUd3WjV3YjYzUGdGbkdHWU5iTXA0VVVSRQpNZW1WQlBMNWxWaVU3NkRzQ3l3YlkrcEZLQk9LaFptUmJ2RGRQVXB0VU1kU09jZE1GcVlCUEdJL3NBclZ6Znl4CkJrNlFWWkMvYUx0a28xaldQZzVKSDYwQ2dZQkdEb3JKSFQ4THZXN24vcy9PUjc4WnpneTkzMW13djVkQmU3SHEKYktkUWc2Q0k3aG54UzIvZklpYVZhSlgwZWFsUi8zZHhzOTRzQTBIU29JQ2QzL2pnaFZvQ1NFU2Rhb0NKcWNFNQo0SGg0dFZnTGFaV21FY3psU051cDBHRzFYWGYybFcwbG1mRkVFb05HN3EzV3FUeHBERlZaL29YcXpaUkJOWm50CjlEVyt3UUtCZ0FrT0tMeFNUUVZoUzI5RmJ2L0ZYN1A5OTJRcmZ5NEVQMTZsQUtveEptbkJ0dUFVNStVMm1DYmQKS2NLeWFKYUFRbzVqcmpMM0UyU0VGMWpSenQyTC9hTUorVVNSeFd3M1JBckdwUkRIbEhYdzNRN2wxV2V6aUZUSwpNaXZPRzRnVVA0bFhTVzhXZ3BObWcvUlBqVCtxajNSNy9yZU16S0txTUpBNnRROEo2b2JhCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

---

apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.tap.linkerd.io
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
spec:
  group: tap.linkerd.io
  version: v1alpha1
  groupPriorityMinimum: 1000
  versionPriority: 100
  service:
    name: linkerd-tap
    namespace: linkerd-service
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lSQVBnK0ZhS0d4WHRCSXk0U1NnOTllczB3RFFZSktvWklodmNOQVFFTEJRQXcKS2pFb01DWUdBMVVFQXhNZmJHbHVhMlZ5WkMxMFlYQXViR2x1YTJWeVpDMXpaWEoyYVdObExuTjJZekFlRncweQpNREExTURVeU16UXlNek5hRncweU1UQTFNRFV5TXpReU16TmFNQ294S0RBbUJnTlZCQU1USDJ4cGJtdGxjbVF0CmRHRndMbXhwYm10bGNtUXRjMlZ5ZG1salpTNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUNwRlBOdG9pdS9IemdWdzlWanlVWTNLeit5cmQ2bnlMbTl2R1VxdG1Jd2lBV2JZTy9PM3V0cApxaTJ0ZnRydDVVQXdQOTRrVUlBSkV0cGhzaUprRXc3amlaR0pFR0JoWmNtU3NGSjkrZzZHMWtYMzV6WVZqaXlDCnc4eU13em14dVdiaEQzV1UvcWxzdkpDWS9Hek55YW1SSlRiMTd4NGxUdFR6L3I2U0Y2aVJuTmJCbFBMSVRVWkEKSlI2R1J0R3FsRnpWYVVPTEsyQ2J2MnF3dzkydEFZZE9sVEF6Nnp4SytKZFQvc3MzM2duMm9PclIvemZGV1kvZgoyZjVUVWdKR0dLMy90NWYyelZDNG1TY1F4L0luSlFHUm1VNXJPUk5lZnc1b1N3RzFsQzg3dExWSFQ5cmdGT2oxCnRPRTN2R3J5NitMUWF4ZHlxVkxsOHM2Z21LRW5OdVFCQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUMKcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbGQybHRpZXdVbm9ZTVJQS1VnSkNwTVFXRXBZbkkrZXZoYTI1CnRncmcvL2lwUmhweVVUaEw3ODdIaTdJVi9QcDhwWld0UkQwN1NZTmxuZndRWEJXZDVGeUVSdEIraDhQNVFYb1EKaVNJQXBZcDZoZUlidFhuNWVLZkU4dmtkOHdMN3FNOEJuMkZ4VlBtQTk1TGVWT3dVYm5wYTJMcEIyWFRMLy9tcAp5ZG9QVnp3UjZETHRodDJWbk8rQTgxQWdrV0k5TUpsQkJBK3NTdzFmMHgvemZnOVcrTEhvSVhVWnk0dXkrNTNSClVuMTcydnlNa0RIcm5Xa0VSTDJscXJYS21SSUhySjF1YVQyVVVpellyV0RuMEtyUkZ2WTZPY3BLL2tkOEpJSFUKUlRGKzBQOHpGVXBTMVk1d2hOamp6K29BbjVEWVdTUTBlb09UUXQ5N1JINnNRRUNpbWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==

---

apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: linkerd-linkerd-service-control-plane
  labels:
    linkerd.io/control-plane-ns: linkerd-service
spec:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  allowedCapabilities:
    - NET_ADMIN
    - NET_RAW
  requiredDropCapabilities:
    - ALL
  hostNetwork: false
  hostIPC: false
  hostPID: false
  seLinux:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  volumes:
    - configMap
    - emptyDir
    - secret
    - projected
    - downwardAPI
    - persistentVolumeClaim

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-psp
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
rules:
  - apiGroups: ['policy', 'extensions']
    resources: ['podsecuritypolicies']
    verbs: ['use']
    resourceNames:
      - linkerd-linkerd-service-control-plane

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-psp
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-ns: linkerd-service
roleRef:
  kind: Role
  name: linkerd-psp
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: linkerd-controller
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-grafana
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-heartbeat
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-identity
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-prometheus
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-proxy-injector
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-sp-validator
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-tap
    namespace: linkerd-service
  - kind: ServiceAccount
    name: linkerd-web
    namespace: linkerd-service

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
data:
  global: |
    {"linkerdNamespace":"linkerd-service","cniEnabled":false,"version":"stable-2.7.1","identityContext":{"trustDomain":"cluster.local","trustAnchorsPem":"-----BEGIN CERTIFICATE-----\nMIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0\neS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MDUyMzQyMjNa\nFw0yMTA1MDUyMzQyNDNaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy\ndmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEz4gQ\nptr4BOr0Iufpq20ccz0syy6o4U3ACcJThzGT+bB5lfMdF5aGkQnr1wHTiRxrg09M\nHqwXkv2+9tzxhkzs06NCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG\nAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA\nMEUCIQDJHwOM6Zq1MoIgaE1jGNDDH1+7jYniiVuRuLw6X8mw9AIgJWdtYvnCP2MZ\n25lpYiibWUC3AR2n6/dyqu9klIXWJaE=\n-----END CERTIFICATE-----\n","issuanceLifetime":"86400s","clockSkewAllowance":"20s","scheme":"linkerd.io/tls"},"autoInjectContext":null,"omitWebhookSideEffects":false,"clusterDomain":"cluster.local"}
  proxy: |
    {"proxyImage":{"imageName":"gcr.io/linkerd-io/proxy","pullPolicy":"IfNotPresent"},"proxyInitImage":{"imageName":"gcr.io/linkerd-io/proxy-init","pullPolicy":"IfNotPresent"},"controlPort":{"port":4190},"ignoreInboundPorts":[],"ignoreOutboundPorts":[],"inboundPort":{"port":4143},"adminPort":{"port":4191},"outboundPort":{"port":4140},"resource":{"requestCpu":"","requestMemory":"","limitCpu":"","limitMemory":""},"proxyUid":"2102","logLevel":{"level":"warn,linkerd=info"},"disableExternalProfiles":true,"proxyVersion":"stable-2.7.1","proxyInitImageVersion":"v1.3.2","debugImage":{"imageName":"gcr.io/linkerd-io/debug","pullPolicy":"IfNotPresent"},"debugImageVersion":"stable-2.7.1"}
  install: |
    {"cliVersion":"stable-2.7.1","flags":[]}

---

kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
    linkerd.io/identity-issuer-expiry: 2021-05-05T23:42:43Z
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJrekNDQVRtZ0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQXhNUzh3TFFZRFZRUURFeVpwWkdWdWRHbDAKZVM1c2FXNXJaWEprTFhObGNuWnBZMlV1WTJ4MWMzUmxjaTVzYjJOaGJEQWVGdzB5TURBMU1EVXlNelF5TWpOYQpGdzB5TVRBMU1EVXlNelF5TkROYU1ERXhMekF0QmdOVkJBTVRKbWxrWlc1MGFYUjVMbXhwYm10bGNtUXRjMlZ5CmRtbGpaUzVqYkhWemRHVnlMbXh2WTJGc01Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRXo0Z1EKcHRyNEJPcjBJdWZwcTIwY2N6MHN5eTZvNFUzQUNjSlRoekdUK2JCNWxmTWRGNWFHa1FucjF3SFRpUnhyZzA5TQpIcXdYa3YyKzl0enhoa3pzMDZOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUFvR0NDcUdTTTQ5QkFNQ0EwZ0EKTUVVQ0lRREpId09NNlpxMU1vSWdhRTFqR05EREgxKzdqWW5paVZ1UnVMdzZYOG13OUFJZ0pXZHRZdm5DUDJNWgoyNWxwWWlpYldVQzNBUjJuNi9keXF1OWtsSVhXSmFFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUdjSEVlTHZLWU9ocXZ1bnA4NXNEbG9OUENYUjFaWWg3VkQxV1VDNVk0a3JvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFejRnUXB0cjRCT3IwSXVmcHEyMGNjejBzeXk2bzRVM0FDY0pUaHpHVCtiQjVsZk1kRjVhRwprUW5yMXdIVGlSeHJnMDlNSHF3WGt2Mis5dHp4aGt6czB3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-identity
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-identity
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - identity
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9990
            initialDelaySeconds: 10
          name: identity
          ports:
            - containerPort: 8080
              name: grpc
            - containerPort: 9990
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9990
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
            - mountPath: /var/run/linkerd/identity/issuer
              name: identity-issuer
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MDUyMzQyMjNa
                Fw0yMTA1MDUyMzQyNDNaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEz4gQ
                ptr4BOr0Iufpq20ccz0syy6o4U3ACcJThzGT+bB5lfMdF5aGkQnr1wHTiRxrg09M
                HqwXkv2+9tzxhkzs06NCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIQDJHwOM6Zq1MoIgaE1jGNDDH1+7jYniiVuRuLw6X8mw9AIgJWdtYvnCP2MZ
                25lpYiibWUC3AR2n6/dyqu9klIXWJaE=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: localhost.:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-identity
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - name: identity-issuer
          secret:
            secretName: linkerd-identity-issuer
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-controller-api
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: controller
  ports:
    - name: http
      port: 8085
      targetPort: 8085

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-controller
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: controller
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-controller
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: controller
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-controller
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - public-api
            - -prometheus-url=http://linkerd-prometheus.linkerd-service.svc.cluster.local:9090
            - -destination-addr=linkerd-dst.linkerd-service.svc.cluster.local:8086
            - -controller-namespace=linkerd-service
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9995
            initialDelaySeconds: 10
          name: public-api
          ports:
            - containerPort: 8085
              name: http
            - containerPort: 9995
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9995
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MDUyMzQyMjNa
                Fw0yMTA1MDUyMzQyNDNaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEz4gQ
                ptr4BOr0Iufpq20ccz0syy6o4U3ACcJThzGT+bB5lfMdF5aGkQnr1wHTiRxrg09M
                HqwXkv2+9tzxhkzs06NCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIQDJHwOM6Zq1MoIgaE1jGNDDH1+7jYniiVuRuLw6X8mw9AIgJWdtYvnCP2MZ
                25lpYiibWUC3AR2n6/dyqu9klIXWJaE=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-controller
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
    - name: grpc
      port: 8086
      targetPort: 8086

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-destination
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-destination
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - destination
            - -addr=:8086
            - -controller-namespace=linkerd-service
            - -enable-h2-upgrade=true
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9996
            initialDelaySeconds: 10
          name: destination
          ports:
            - containerPort: 8086
              name: grpc
            - containerPort: 9996
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9996
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: localhost.:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MDUyMzQyMjNa
                Fw0yMTA1MDUyMzQyNDNaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEz4gQ
                ptr4BOr0Iufpq20ccz0syy6o4U3ACcJThzGT+bB5lfMdF5aGkQnr1wHTiRxrg09M
                HqwXkv2+9tzxhkzs06NCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIQDJHwOM6Zq1MoIgaE1jGNDDH1+7jYniiVuRuLw6X8mw9AIgJWdtYvnCP2MZ
                25lpYiibWUC3AR2n6/dyqu9klIXWJaE=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-destination
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd-service
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  schedule: "52 23 * * * "
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.7.1
        spec:
          nodeSelector:
            beta.kubernetes.io/os: linux
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
            - name: heartbeat
              image: gcr.io/linkerd-io/controller:stable-2.7.1
              imagePullPolicy: IfNotPresent
              args:
                - "heartbeat"
                - "-prometheus-url=http://linkerd-prometheus.linkerd-service.svc.cluster.local:9090"
                - "-controller-namespace=linkerd-service"
                - "-log-level=info"
              securityContext:
                runAsUser: 2103

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-web
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: web
  ports:
    - name: http
      port: 8084
      targetPort: 8084
    - name: admin-http
      port: 9994
      targetPort: 9994

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: web
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-web
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: web
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-web
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: web
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-web
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - -api-addr=linkerd-controller-api.linkerd-service.svc.cluster.local:8085
            - -grafana-addr=linkerd-grafana.linkerd-service.svc.cluster.local:3000
            - -controller-namespace=linkerd-service
            - -log-level=info
            - -enforced-host=^(localhost|127\.0\.0\.1|linkerd-web\.linkerd-service\.svc\.cluster\.local|linkerd-web\.linkerd-service\.svc|\[::1\])(:\d+)?$
          image: gcr.io/linkerd-io/web:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9994
            initialDelaySeconds: 10
          name: web
          ports:
            - containerPort: 8084
              name: http
            - containerPort: 9994
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9994
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MDUyMzQyMjNa
                Fw0yMTA1MDUyMzQyNDNaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEz4gQ
                ptr4BOr0Iufpq20ccz0syy6o4U3ACcJThzGT+bB5lfMdF5aGkQnr1wHTiRxrg09M
                HqwXkv2+9tzxhkzs06NCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIQDJHwOM6Zq1MoIgaE1jGNDDH1+7jYniiVuRuLw6X8mw9AIgJWdtYvnCP2MZ
                25lpYiibWUC3AR2n6/dyqu9klIXWJaE=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-web
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-prometheus-config
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
data:
  prometheus.yml: |-
    global:
      scrape_interval: 10s
      scrape_timeout: 10s
      evaluation_interval: 10s

    rule_files:
    - /etc/prometheus/*_rules.yml

    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']

    - job_name: 'grafana'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd-service']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        action: keep
        regex: ^grafana$

    #  Required for: https://grafana.com/grafana/dashboards/315
    - job_name: 'kubernetes-nodes-cadvisor'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
      metric_relabel_configs:
      - source_labels: [__name__]
        regex: '(container|machine)_(cpu|memory|network|fs)_(.+)'
        action: keep
      - source_labels: [__name__]
        regex: 'container_memory_failures_total' # unneeded large metric
        action: drop

    - job_name: 'linkerd-controller'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd-service']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
        - __meta_kubernetes_pod_container_port_name
        action: keep
        regex: (.*);admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: component

    - job_name: 'linkerd-proxy'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        - __meta_kubernetes_pod_container_port_name
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns
        action: keep
        regex: ^linkerd-proxy;linkerd-admin;linkerd-service$
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
      # special case k8s' "job" label, to not interfere with prometheus' "job"
      # label
      # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =>
      # k8s_job=foo
      - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]
        action: replace
        target_label: k8s_job
      # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job
      # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =>
      # deployment=foo
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # drop all labels that we just made copies of in the previous labelmap
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # __meta_kubernetes_pod_label_linkerd_io_foo=bar =>
      # foo=bar
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_(.+)
      # Copy all pod labels to tmp labels
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: __tmp_pod_label_$1
      # Take `linkerd_io_` prefixed labels and copy them without the prefix
      - action: labelmap
        regex: __tmp_pod_label_linkerd_io_(.+)
        replacement:  __tmp_pod_label_$1
      # Drop the `linkerd_io_` originals
      - action: labeldrop
        regex: __tmp_pod_label_linkerd_io_(.+)
      # Copy tmp labels into real labels
      - action: labelmap
        regex: __tmp_pod_label_(.+)

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-prometheus
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: prometheus
  ports:
    - name: admin-http
      port: 9090
      targetPort: 9090

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-prometheus
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: prometheus
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-prometheus
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: prometheus
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-prometheus
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - --storage.tsdb.path=/data
            - --storage.tsdb.retention.time=6h
            - --config.file=/etc/prometheus/prometheus.yml
            - --log.level=info
          image: prom/prometheus:v2.15.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          name: prometheus
          ports:
            - containerPort: 9090
              name: admin-http
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            runAsUser: 65534
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /etc/prometheus
              name: prometheus-config
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_OUTBOUND_ROUTER_CAPACITY
              value: "10000"
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MDUyMzQyMjNa
                Fw0yMTA1MDUyMzQyNDNaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEz4gQ
                ptr4BOr0Iufpq20ccz0syy6o4U3ACcJThzGT+bB5lfMdF5aGkQnr1wHTiRxrg09M
                HqwXkv2+9tzxhkzs06NCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIQDJHwOM6Zq1MoIgaE1jGNDDH1+7jYniiVuRuLw6X8mw9AIgJWdtYvnCP2MZ
                25lpYiibWUC3AR2n6/dyqu9klIXWJaE=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-prometheus
      volumes:
        - emptyDir: {}
          name: data
        - configMap:
            name: linkerd-prometheus-config
          name: prometheus-config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-grafana-config
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
data:
  grafana.ini: |-
    instance_name = linkerd-grafana

    [server]
    root_url = %(protocol)s://%(domain)s:/grafana/

    [auth]
    disable_login_form = true

    [auth.anonymous]
    enabled = true
    org_role = Editor

    [auth.basic]
    enabled = false

    [analytics]
    check_for_updates = false

    [panels]
    disable_sanitize_html = true

  datasources.yaml: |-
    apiVersion: 1
    datasources:
    - name: prometheus
      type: prometheus
      access: proxy
      orgId: 1
      url: http://linkerd-prometheus.linkerd-service.svc.cluster.local:9090
      isDefault: true
      jsonData:
        timeInterval: "5s"
      version: 1
      editable: true

  dashboards.yaml: |-
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: true
      editable: true
      options:
        path: /var/lib/grafana/dashboards
        homeDashboardId: linkerd-top-line

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-grafana
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: grafana
  ports:
    - name: http
      port: 3000
      targetPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: grafana
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-grafana
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: grafana
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-grafana
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: grafana
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-grafana
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - env:
            - name: GF_PATHS_DATA
              value: /data
          image: gcr.io/linkerd-io/grafana:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
          name: grafana
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          securityContext:
            runAsUser: 472
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /etc/grafana
              name: grafana-config
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MDUyMzQyMjNa
                Fw0yMTA1MDUyMzQyNDNaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEz4gQ
                ptr4BOr0Iufpq20ccz0syy6o4U3ACcJThzGT+bB5lfMdF5aGkQnr1wHTiRxrg09M
                HqwXkv2+9tzxhkzs06NCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIQDJHwOM6Zq1MoIgaE1jGNDDH1+7jYniiVuRuLw6X8mw9AIgJWdtYvnCP2MZ
                25lpYiibWUC3AR2n6/dyqu9klIXWJaE=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-grafana
      volumes:
        - emptyDir: {}
          name: data
        - configMap:
            items:
              - key: grafana.ini
                path: grafana.ini
              - key: datasources.yaml
                path: provisioning/datasources/datasources.yaml
              - key: dashboards.yaml
                path: provisioning/dashboards/dashboards.yaml
            name: linkerd-grafana-config
          name: grafana-config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-proxy-injector
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - proxy-injector
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9995
            initialDelaySeconds: 10
          name: proxy-injector
          ports:
            - containerPort: 8443
              name: proxy-injector
            - containerPort: 9995
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9995
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/config
              name: config
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MDUyMzQyMjNa
                Fw0yMTA1MDUyMzQyNDNaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEz4gQ
                ptr4BOr0Iufpq20ccz0syy6o4U3ACcJThzGT+bB5lfMdF5aGkQnr1wHTiRxrg09M
                HqwXkv2+9tzxhkzs06NCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIQDJHwOM6Zq1MoIgaE1jGNDDH1+7jYniiVuRuLw6X8mw9AIgJWdtYvnCP2MZ
                25lpYiibWUC3AR2n6/dyqu9klIXWJaE=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-proxy-injector
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - name: tls
          secret:
            secretName: linkerd-proxy-injector-tls
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
    - name: proxy-injector
      port: 443
      targetPort: proxy-injector

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: sp-validator
  ports:
    - name: sp-validator
      port: 443
      targetPort: sp-validator

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: sp-validator
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: sp-validator
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-sp-validator
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: sp-validator
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: sp-validator
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-sp-validator
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - sp-validator
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9997
            initialDelaySeconds: 10
          name: sp-validator
          ports:
            - containerPort: 8443
              name: sp-validator
            - containerPort: 9997
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9997
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MDUyMzQyMjNa
                Fw0yMTA1MDUyMzQyNDNaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEz4gQ
                ptr4BOr0Iufpq20ccz0syy6o4U3ACcJThzGT+bB5lfMdF5aGkQnr1wHTiRxrg09M
                HqwXkv2+9tzxhkzs06NCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIQDJHwOM6Zq1MoIgaE1jGNDDH1+7jYniiVuRuLw6X8mw9AIgJWdtYvnCP2MZ
                25lpYiibWUC3AR2n6/dyqu9klIXWJaE=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-sp-validator
      volumes:
        - name: tls
          secret:
            secretName: linkerd-sp-validator-tls
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity

---

kind: Service
apiVersion: v1
metadata:
  name: linkerd-tap
  namespace: linkerd-service
  labels:
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: tap
  ports:
    - name: grpc
      port: 8088
      targetPort: 8088
    - name: apiserver
      port: 443
      targetPort: apiserver

---

kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.7.1
  labels:
    app.kubernetes.io/name: tap
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.7.1
    linkerd.io/control-plane-component: tap
    linkerd.io/control-plane-ns: linkerd-service
  name: linkerd-tap
  namespace: linkerd-service
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: tap
      linkerd.io/control-plane-ns: linkerd-service
      linkerd.io/proxy-deployment: linkerd-tap
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.7.1
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.7.1
      labels:
        linkerd.io/control-plane-component: tap
        linkerd.io/control-plane-ns: linkerd-service
        linkerd.io/proxy-deployment: linkerd-tap
    spec:
      priorityClassName: system-cluster-critical
      nodeSelector:
        node-role.kubernetes.io/master: ""
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
      containers:
        - args:
            - tap
            - -controller-namespace=linkerd-service
            - -log-level=info
          image: gcr.io/linkerd-io/controller:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /ping
              port: 9998
            initialDelaySeconds: 10
          name: tap
          ports:
            - containerPort: 8088
              name: grpc
            - containerPort: 8089
              name: apiserver
            - containerPort: 9998
              name: admin-http
          readinessProbe:
            failureThreshold: 7
            httpGet:
              path: /ready
              port: 9998
          securityContext:
            runAsUser: 2103
          volumeMounts:
            - mountPath: /var/run/linkerd/tls
              name: tls
              readOnly: true
            - mountPath: /var/run/linkerd/config
              name: config
        - env:
            - name: LINKERD2_PROXY_LOG
              value: warn,linkerd=info
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: linkerd-dst.linkerd-service.svc.cluster.local:8086
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: 0.0.0.0:4190
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: 0.0.0.0:4191
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: 127.0.0.1:4140
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: 0.0.0.0:4143
            - name: LINKERD2_PROXY_DESTINATION_GET_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: ns:$(_pod_ns)
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBkzCCATmgAwIBAgIBATAKBggqhkjOPQQDAjAxMS8wLQYDVQQDEyZpZGVudGl0
                eS5saW5rZXJkLXNlcnZpY2UuY2x1c3Rlci5sb2NhbDAeFw0yMDA1MDUyMzQyMjNa
                Fw0yMTA1MDUyMzQyNDNaMDExLzAtBgNVBAMTJmlkZW50aXR5LmxpbmtlcmQtc2Vy
                dmljZS5jbHVzdGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEz4gQ
                ptr4BOr0Iufpq20ccz0syy6o4U3ACcJThzGT+bB5lfMdF5aGkQnr1wHTiRxrg09M
                HqwXkv2+9tzxhkzs06NCMEAwDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQWMBQGCCsG
                AQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MAoGCCqGSM49BAMCA0gA
                MEUCIQDJHwOM6Zq1MoIgaE1jGNDDH1+7jYniiVuRuLw6X8mw9AIgJWdtYvnCP2MZ
                25lpYiibWUC3AR2n6/dyqu9klIXWJaE=
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: linkerd-identity.linkerd-service.svc.cluster.local:8080
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd-service
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          image: gcr.io/linkerd-io/proxy:stable-2.7.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 4191
            initialDelaySeconds: 10
          name: linkerd-proxy
          ports:
            - containerPort: 4143
              name: linkerd-proxy
            - containerPort: 4191
              name: linkerd-admin
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
            initialDelaySeconds: 2
          resources:
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 2102
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/linkerd/identity/end-entity
              name: linkerd-identity-end-entity
      initContainers:
        - args:
            - --incoming-proxy-port
            - "4143"
            - --outgoing-proxy-port
            - "4140"
            - --proxy-uid
            - "2102"
            - --inbound-ports-to-ignore
            - 4190,4191
            - --outbound-ports-to-ignore
            - "443"
          image: gcr.io/linkerd-io/proxy-init:v1.3.2
          imagePullPolicy: IfNotPresent
          name: linkerd-init
          resources:
            limits:
              cpu: "100m"
              memory: "50Mi"
            requests:
              cpu: "10m"
              memory: "10Mi"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: false
            runAsUser: 0
          terminationMessagePolicy: FallbackToLogsOnError
      serviceAccountName: linkerd-tap
      volumes:
        - configMap:
            name: linkerd-config
          name: config
        - emptyDir:
            medium: Memory
          name: linkerd-identity-end-entity
        - name: tls
          secret:
            secretName: linkerd-tap-tls

---