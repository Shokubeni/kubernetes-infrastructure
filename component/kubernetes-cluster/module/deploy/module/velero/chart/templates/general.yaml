---

apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: {{ $.Release.Namespace }}
  name: velero
  annotations:
    eks.amazonaws.com/role-arn: {{ $.Values.roleArn }}
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: velero
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: velero
    namespace: {{ .Release.Namespace }}

---

apiVersion: velero.io/v1
kind: BackupStorageLocation
metadata:
  namespace: {{ $.Release.Namespace }}
  name: default
spec:
  config:
    region: {{ $.Values.bucketRegion }}
  objectStorage:
    bucket: {{ $.Values.bucketName }}
  provider: aws
---

apiVersion: velero.io/v1
kind: VolumeSnapshotLocation
metadata:
  namespace: {{ $.Release.Namespace }}
  name: default
spec:
  config:
    region: {{ $.Values.bucketRegion }}
  provider: aws

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ $.Release.Namespace }}
  name: velero
  labels:
    version: v{{ $.Chart.AppVersion }}
    app: velero
spec:
  replicas: 1
  selector:
    matchLabels:
      app: velero
  template:
    metadata:
      labels:
        version: v{{ $.Chart.AppVersion }}
        app: velero
    spec:
      priorityClassName: system-cluster-critical
      securityContext:
        fsGroup: 65534
      containers:
        - args:
            - server
            - --features=
          command:
            - /velero
          env:
            - name: VELERO_SCRATCH_DIR
              value: /scratch
            - name: VELERO_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LD_LIBRARY_PATH
              value: /plugins
          image: velero/velero:v1.6.3
          imagePullPolicy: IfNotPresent
          name: velero
          ports:
            - containerPort: 8085
              name: http-metrics
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - mountPath: /plugins
              name: plugins
            - mountPath: /scratch
              name: scratch
      initContainers:
        - image: velero/velero-plugin-for-aws:v1.2.1
          imagePullPolicy: IfNotPresent
          name: velero-plugin-for-aws
          resources: {}
          volumeMounts:
            - mountPath: /target
              name: plugins
      restartPolicy: Always
      serviceAccountName: velero
      volumes:
        - emptyDir: {}
          name: plugins
        - emptyDir: {}
          name: scratch
---

apiVersion: v1
kind: Service
metadata:
  namespace: {{ $.Release.Namespace }}
  name: velero
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8085'
  labels:
    app: velero
spec:
  ports:
    - name: http-metrics
      targetPort: 8085
      port: 8085
  selector:
    app: velero
