---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ $.Release.Namespace }}
  name: kube-state-metrics
  labels:
    version: v{{ $.Chart.AppVersion }}
    app: kube-state-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      version: v{{ $.Chart.AppVersion }}
      app: kube-state-metrics
  template:
    metadata:
      labels:
        version: v{{ $.Chart.AppVersion }}
        app: kube-state-metrics
    spec:
      serviceAccountName: kube-state-metrics
      hostNetwork: false
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsUser: 65534
      containers:
        - name: kube-state-metrics
          args:
            - --collectors=certificatesigningrequests
            - --collectors=configmaps
            - --collectors=cronjobs
            - --collectors=daemonsets
            - --collectors=deployments
            - --collectors=endpoints
            - --collectors=horizontalpodautoscalers
            - --collectors=ingresses
            - --collectors=jobs
            - --collectors=limitranges
            - --collectors=mutatingwebhookconfigurations
            - --collectors=namespaces
            - --collectors=networkpolicies
            - --collectors=nodes
            - --collectors=persistentvolumeclaims
            - --collectors=persistentvolumes
            - --collectors=poddisruptionbudgets
            - --collectors=pods
            - --collectors=replicasets
            - --collectors=replicationcontrollers
            - --collectors=resourcequotas
            - --collectors=secrets
            - --collectors=services
            - --collectors=statefulsets
            - --collectors=storageclasses
            - --collectors=validatingwebhookconfigurations
            - --collectors=volumeattachments
          imagePullPolicy: IfNotPresent
          image: quay.io/coreos/kube-state-metrics:v1.9.7
          ports:
            - name: http-metrics
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              cpu: 30m
              memory: 64Mi